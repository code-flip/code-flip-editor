!function(t){var i={};function e(s){if(i[s])return i[s].exports;var o=i[s]={i:s,l:!1,exports:{}};return t[s].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=i,e.d=function(t,i,s){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:s})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=0)}([function(t,i,e){"use strict";e.r(i);for(var s,o=function(){return function(t,i,e,s){this.x=t,this.y=i,this.width=e,this.height=s}}(),h=function(){return function(t,i){this.x=t,this.y=i}}(),r=function(){function t(t,i,e,s){void 0===i&&(i=2),void 0===e&&(e=!0),void 0===s&&(s=!0),this.tabHeight=6,this.tabWidth=12,this.tabOffset=12,this.reporter=!1,this.layout=t,this.radius=i,this.next=e,this.previous=s}return t.prototype.path=function(){var t="M "+this.radius+",0";t=(t=(t=this.previous?(t=(t=(t=(t=t+"l "+this.tabOffset+",0")+"l "+0*this.tabHeight+","+this.tabHeight)+"l "+(this.tabWidth-2*this.tabHeight*0)+",0")+"l "+0*this.tabHeight+","+-this.tabHeight)+"l "+(this.layout.widths[0]-2*this.radius-this.tabWidth-this.tabOffset)+",0":t+"l "+(this.layout.widths[0]-2*this.radius)+",0")+"a"+this.radius+","+this.radius+",0,0,1,"+this.radius+","+this.radius)+"l 0,"+(this.layout.heights[0]+20-2*this.radius);for(var i=this.layout.widths[0],e=1;e<this.layout.widths.length;e++){var s=this.layout.widths[e],o=s-i;e<this.layout.widths.length-1&&this.layout.widths[e+1];o>2*this.radius?(t=t+"a"+this.radius+","+this.radius+",0,0,0,"+this.radius+","+this.radius,t=this.layout.data[e-1].next?(t=(t=(t=(t=t+"l "+this.tabOffset+",0")+"l "+0*this.tabHeight+","+this.tabHeight)+"l "+(this.tabWidth-2*this.tabHeight*0)+",0")+"l "+0*this.tabHeight+","+-this.tabHeight)+"l "+(o-2*this.radius-this.tabWidth-this.tabOffset)+",0":t+"l "+(o-2*this.radius)+",0"):o<2*-this.radius?(t=t+"a"+this.radius+","+this.radius+",0,0,1,"+-this.radius+","+this.radius,t=this.layout.data[e-1].next?(t=(t=(t=(t=t+"l "+-(-o+2*this.radius-this.tabWidth-this.tabOffset)+",0")+"l "+0*this.tabHeight+","+this.tabHeight)+"l "+(-this.tabWidth+2*this.tabHeight*0)+",0")+"l "+0*this.tabHeight+","+-this.tabHeight)+"l "+-this.tabOffset+",0":t+"l "+(o+2*this.radius)+",0"):(t=t+"a"+this.radius+","+this.radius+",0,0,1,"+-this.radius+","+this.radius,t=this.layout.data[e-1].next?(t=(t=(t=(t=t+"l "+this.tabOffset+",0")+"l "+0*this.tabHeight+","+this.tabHeight)+"l "+(this.tabWidth-2*this.tabHeight*0)+",0")+"l "+0*this.tabHeight+","+-this.tabHeight)+"l "+(o-this.tabWidth-this.tabOffset)+",0":t+"l "+o+",0"),t=(t=o<2*-this.radius?t+"a"+this.radius+","+this.radius+",0,0,0,"+-this.radius+","+this.radius:t+"a"+this.radius+","+this.radius+",0,0,1,"+this.radius+","+this.radius)+"l 0,"+(this.layout.heights[e]+20-2*this.radius),i=s+0}var h=this.layout.widths[this.layout.widths.length-1];return t=t+"a"+this.radius+","+this.radius+",0,0,1,"+-this.radius+","+this.radius,t=(t=(t=(t=this.next?(t=(t=(t=(t=t+"l "+(-h+2*this.radius+this.tabWidth+this.tabOffset)+",0")+"l "+0*-this.tabHeight+","+this.tabHeight)+"l "+(-this.tabWidth+2*this.tabHeight*0)+",0")+"l "+0*-this.tabHeight+","+-this.tabHeight)+"l "+-this.tabOffset+",0":t+"l "+(-h+2*this.radius)+",0")+"a"+this.radius+","+this.radius+",0,0,1,"+-this.radius+","+-this.radius)+"l 0,"+(-this.layout.tHeight+2*this.radius))+"a"+this.radius+","+this.radius+",0,0,1,"+this.radius+","+-this.radius},t}(),n=function(){function t(){this.inputList=[[]],this.canHavePrevious=!1,this.canHaveNext=!1,this.position=new h(0,0),this.color="hsl(0, 70%, 50%)";Math.floor(360*Math.random());this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.classList.add("block"),this.shape=document.createElementNS("http://www.w3.org/2000/svg","path"),this.shape.setAttribute("filter","url(#Bevel)"),this.group.appendChild(this.shape)}return Object.defineProperty(t.prototype,"previous",{get:function(){return this._previous},set:function(t){this._previous&&this._previous!=t&&(this._previous.next=void 0,this._previous=t);this._previous&&this._previous.next!=this&&(this._previous.next=this)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"next",{get:function(){return this._next},set:function(t){if(this._next&&this._next!=t){var i=this._next;this._next.group.parentNode==this.group&&this.group.removeChild(this._next.group),i._previous=void 0,this._next=t,i.group.parentNode==this.group&&this.group.removeChild(i.group)}this._next&&this._next.previous!=this&&(this._next.previous=this)},enumerable:!0,configurable:!0}),t.prototype.toCode=function(){return"undefined"},t.prototype.lastBlock=function(){return this.next?this.next.lastBlock():this},t.prototype.layoutChildren=function(){for(var t=10,i=0,e=[],s=[],o=[],h=!1,r=!1,n=0;n<this.inputList.length;n++){var a=this.inputList[n],u=48;h&&(u=128),o[n]={prev:h&&r,next:!1};var p=10,c=12;h=!1,r=!1;for(var l=0;l<a.length;l++){var d;if("InputStack"==a[l].type)u=48,p=Math.max(p,u),a[l].render(this.group),(d=a[l].group.getBBox()).height=a[l].height(),a[l].position.x=p,a[l].position.y=t-10,a[l].render(this.group),c=Math.max(c,d.height-20),h=!0,n>0&&(s[n-1]=Math.max(s[n-1],128)),n===this.inputList.length-1&&(s[n-1]=Math.max(s[n-1],128)),a[l].stack&&!a[l].stack.lastBlock().canHaveNext||(r=!0,o[n].next=!0),o[n-1].next=!0;else a[l].render(this.group),(d=a[l].group.getBBox()).height=a[l].height(),a[l].position.x=p,a[l].position.y=t,p+=d.width+10,c=Math.max(c,d.height)}for(l=0;l<a.length;l++)"InputStack"!=a[l].type&&(a[l].position.y=t-a[l].height()/2+c/2,a[l].render(this.group));e.push(c),s.push(Math.max(p,u)),i=Math.max(i,Math.max(p,u)),t+=c+20,n===this.inputList.length-1&&h&&(s[n+1]=128,e[n+1]=4,t+=24,o[n+1]={prev:r,next:!1})}return{heights:e,tHeight:t-10,widths:s,mWidth:i,data:o}},t.prototype.layoutNext=function(){this.next&&(this.next.position.x=0,this.next.position.y=this.bBox.height,this.next.render(this.group))},t.prototype.render=function(t){var i=this.layoutChildren();this.group.parentNode!==t&&t.appendChild(this.group),this.bBox=new o(this.position.x,this.position.y,128,i.tHeight);var e=new r(i,0,this.canHaveNext,this.canHavePrevious);this.shape.setAttribute("d",e.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.shape.setAttribute("fill",this.color),this.layoutNext()},t}(),a=function(){function t(){this.position=new h(0,0),this.color="hsl(0, 100%, 50%)",this.width=48,this.type="InputSVG",this.width=48*Math.random()+24;Math.floor(360*Math.random());this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.classList.add("block"),this.shape=document.createElementNS("http://www.w3.org/2000/svg","path"),this.shape.setAttribute("filter","url(#Bevel2)"),this.group.appendChild(this.shape)}return t.prototype.toCode=function(){return"undefined"},t.prototype.layoutChildren=function(){},t.prototype.height=function(){return this.group.getBBox().height},t.prototype.render=function(t){this.layoutChildren(),this.group.parentNode!==t&&t.appendChild(this.group),this.bBox=new o(this.position.x,this.position.y,this.width,24);var i=new r({heights:[this.bBox.height-20],tHeight:this.bBox.height,widths:[this.bBox.width],mWidth:this.bBox.width,data:[{prev:!1,next:!1}]},0,!1,!1);this.shape.setAttribute("d",i.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.shape.setAttribute("fill",this.color)},t}(),u=(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)i.hasOwnProperty(e)&&(t[e]=i[e])},function(t,i){function e(){this.constructor=t}s(t,i),t.prototype=null===i?Object.create(i):(e.prototype=i.prototype,new e)}),p=function(t){function i(i){var e=t.call(this)||this;return e.position=new h(0,0),e.color="hsl(0, 100%, 50%)",e.width=48,e.type="InputStack",e.stack=i,e}return u(i,t),i.prototype.toCode=function(){return"undefined"},i.prototype.height=function(){return this.bBox.height},i.prototype.setBlock=function(t){if(this.stack){var i=this.stack;this.stack.group.parentNode==this.group&&this.group.removeChild(this.stack.group),this.stack=t,i.group.parentNode==this.group&&this.group.removeChild(i.group)}this.stack=t},i.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.stack?(this.stack.render(this.group),this.bBox=new o(this.position.x,this.position.y,this.stack.group.getBBox().width,this.stack.group.getBBox().height-(this.stack.lastBlock().canHaveNext?6:0))):this.bBox=new o(this.position.x,this.position.y,24,24);var i=new r({heights:[this.bBox.height-20],tHeight:this.bBox.height,widths:[this.bBox.width],mWidth:this.bBox.width,data:[{prev:!1,next:!1}]},0,!1,!1);this.shape.setAttribute("d",i.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.group.setAttribute("id","stack-man"),this.shape.setAttribute("fill","transparent"),this.stack&&this.stack.render(this.group)},i}(a),c=function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)i.hasOwnProperty(e)&&(t[e]=i[e])};return function(i,e){function s(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(s.prototype=e.prototype,new s)}}(),l=function(t){function i(i){var e=t.call(this)||this;return e.position=new h(0,0),e.color="hsl(0, 100%, 50%)",e.width=48,e.type="InputLabel",e.text=i||"",e.label=document.createElementNS("http://www.w3.org/2000/svg","text"),e.label.setAttribute("fill","white"),e.label.setAttribute("y","2"),e.label.setAttribute("style","alignment-baseline: hanging;font-family:monospace;font-size:16px;"),e}return c(i,t),i.prototype.toCode=function(){return"undefined"},i.prototype.height=function(){return this.bBox.height},i.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.label.parentNode!==this.group&&this.group.appendChild(this.label),this.bBox=new o(this.position.x,this.position.y,this.label.getBBox().width,this.label.getBBox().height);var i=new r({heights:[this.bBox.height-20],tHeight:this.bBox.height,widths:[this.bBox.width],mWidth:this.bBox.width,data:[{prev:!1,next:!1}]},0,!1,!1);this.shape.setAttribute("d",i.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.group.setAttribute("id","stack-man"),this.label.innerHTML=this.text,this.shape.setAttribute("fill","transparent")},i}(a),d=function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)i.hasOwnProperty(e)&&(t[e]=i[e])};return function(i,e){function s(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(s.prototype=e.prototype,new s)}}(),g=function(t){function i(i,e){var s=t.call(this)||this;return s.type="InputBlock",s.position=new h(0,0),s.color="hsl(0, 100%, 50%)",s.width=48,s.stack=i,e&&(s.color=e),s}return d(i,t),i.prototype.toCode=function(){return"undefined"},i.prototype.height=function(){return this.bBox.height},i.prototype.setBlock=function(t){if(this.stack){var i=this.stack;this.stack.group.parentNode==this.group&&this.group.removeChild(this.stack.group),this.stack=t,i.group.parentNode==this.group&&this.group.removeChild(i.group)}this.stack=t},i.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.stack?(this.stack.render(this.group),this.bBox=new o(this.position.x,this.position.y,this.stack.group.getBBox().width,this.stack.group.getBBox().height-(this.stack.lastBlock().canHaveNext?6:0))):this.bBox=new o(this.position.x,this.position.y,24,24);var i=new r({heights:[this.bBox.height-20],tHeight:this.bBox.height,widths:[this.bBox.width],mWidth:this.bBox.width,data:[{prev:!1,next:!1}]},0,!1,!1);this.shape.setAttribute("d",i.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.group.setAttribute("id","stack-man"),this.shape.setAttribute("fill",this.color),this.stack&&this.stack.render(this.group)},i}(a),b=function(){function t(t){this.blocks=[],this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.classList.add("toolbox"),this.background=document.createElementNS("http://www.w3.org/2000/svg","rect"),this.background.setAttribute("width","200px"),this.background.setAttribute("height","10px"),this.background.setAttribute("fill","url(#Stripes)"),this.background.setAttribute("filter","url(#Bevel)"),this.background.classList.add("toolbox-background"),this.group.appendChild(this.background),this.editor=t,this.bBox=new o(0,0,500,10)}return t.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.bBox=new o(0,0,300,this.editor.container.clientHeight),this.background.setAttribute("width",this.bBox.width+"px"),this.background.setAttribute("height",this.bBox.height+"px"),this.group.setAttribute("transform","translate("+this.bBox.x+" "+this.bBox.y+")");for(var i=10,e=0;e<this.blocks.length;e++)this.blocks[e].position.x=10,this.blocks[e].position.y=i,this.blocks[e].render(this.group),i+=this.blocks[e].group.getBBox().height+10},t.prototype.addBlocksForLanguage=function(t){this.blocks=this.blocks.concat(t.getBlocks())},t}(),f=[],w=0;w<12;w++)f.push(30*w);var x=function(){function t(t){this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.editor=t,this.background=document.createElementNS("http://www.w3.org/2000/svg","rect"),this.background.setAttribute("width","200px"),this.background.setAttribute("height","10px"),this.background.setAttribute("fill","rgb(250,250,250)"),this.background.classList.add("workspace-background"),this.group.appendChild(this.background),this.bBox=new o(500,0,500,500)}return t.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.bBox=new o(this.editor.toolbox.bBox.width,0,this.editor.container.clientWidth-this.editor.toolbox.bBox.width,this.editor.container.clientHeight),this.background.setAttribute("width",this.bBox.width+"px"),this.background.setAttribute("height",this.bBox.height+"px"),this.group.setAttribute("transform","translate("+this.bBox.x+" "+this.bBox.y+")")},t}(),v=function(){function t(t){this.container=t,this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svg.innerHTML='\n    <filter id="Bevel" filterUnits="objectBoundingBox" x="-10%" y="-10%" width="150%" height="150%">\n  \t\t<feGaussianBlur in="SourceAlpha" stdDeviation="1" result="blur"/>\n  \t\t<feSpecularLighting in="blur" surfaceScale="3" specularConstant="0.5" specularExponent="5" result="specOut" lighting-color="white">\n  \t\t\t<fePointLight x="-5000" y="-5000" z="8000"/>\n  \t\t</feSpecularLighting>\n  \t\t<feComposite in="specOut" in2="SourceAlpha" operator="in" result="specOut2"/>\n      <feComposite in="SourceGraphic" in2="specOut2" operator="arithmetic" k1="0" k2="0" k3="1" k4="-0.3" result="litPaint0" />\n  \t\t<feComposite in="SourceGraphic" in2="litPaint0" operator="arithmetic" k1="0" k2="1" k3="1" k4="0" result="litPaint" />\n  \t</filter>\n    <filter id="Bevel2" filterUnits="objectBoundingBox" x="-10%" y="-10%" width="150%" height="150%">\n  \t\t<feGaussianBlur in="SourceAlpha" stdDeviation="1" result="blur"/>\n  \t\t<feSpecularLighting in="blur" surfaceScale="3" specularConstant="0.5" specularExponent="5" result="specOut" lighting-color="white">\n  \t\t\t<fePointLight x="5000" y="5000" z="8000"/>\n  \t\t</feSpecularLighting>\n  \t\t<feComposite in="specOut" in2="SourceAlpha" operator="in" result="specOut2"/>\n      <feComposite in="SourceGraphic" in2="specOut2" operator="arithmetic" k1="0" k2="0" k3="1" k4="-0.3" result="litPaint0" />\n  \t\t<feComposite in="SourceGraphic" in2="litPaint0" operator="arithmetic" k1="0" k2="1" k3="1" k4="0" result="litPaint" />\n  \t</filter>\n    <defs><pattern id="Stripes" patternUnits="userSpaceOnUse" width="50" height="50" patternTransform="rotate(45)">\n    <rect x="0" y="0" width="50" height="50" fill="#444444"></rect>\n    <line x1="25" y="0" x2="25" y2="50" stroke="#444444" stroke-width="25" />\n    </pattern></defs>\n    ',this.container.appendChild(this.svg),this.svg.setAttribute("width",this.container.clientWidth+""),this.svg.setAttribute("height",this.container.clientHeight+""),this.toolbox=new b(this),this.workspace=new x(this);var i=this;window.setInterval(function(){i.render()},100)}return t.prototype.render=function(){this.svg.setAttribute("width",this.container.clientWidth+""),this.svg.setAttribute("height",this.container.clientHeight+""),this.toolbox.render(this.svg),this.workspace.render(this.svg)},t}(),y=function(){function t(){}return t.prototype.blockIf=function(t,i){var e=new n;return e.color="hsl(180, 100%, 40%)",e.canHaveNext=!0,e.canHavePrevious=!0,e.inputList=[[new l("if ("),new g(t,e.color),new l("):")],[new p(i)]],e},t.prototype.blockIfElse=function(){var t=new n;return t.color="hsl(180, 100%, 40%)",t.canHaveNext=!0,t.canHavePrevious=!0,t.inputList=[[new l("if ("),new g(this.blockFalse(),t.color),new l("):")],[new p],[new l("else:")],[new p]],t},t.prototype.blockFalse=function(){var t=new n;return t.color="hsl(120, 100%, 40%)",t.canHaveNext=!1,t.canHavePrevious=!1,t.inputList=[[new l("False")]],t},t.prototype.blockTrue=function(){var t=new n;return t.color="hsl(120, 100%, 40%)",t.canHaveNext=!1,t.canHavePrevious=!1,t.inputList=[[new l("True")]],t},t.prototype.blockPrint=function(t){var i=new n;return i.color="hsl(60, 100%, 40%)",i.canHaveNext=!0,i.canHavePrevious=!0,i.inputList=[[new l("print ("),new g(t,i.color),new l(")")]],i},t.prototype.blockMathAdd=function(t,i){var e=new n;return e.color="hsl(210, 100%, 40%)",e.canHaveNext=!1,e.canHavePrevious=!1,e.inputList=[[new l("("),new g(t,e.color),new l("+"),new g(i,e.color),new l(")")]],e},t.prototype.blockMathMultiply=function(t,i){var e=new n;return e.color="hsl(210, 100%, 40%)",e.canHaveNext=!1,e.canHavePrevious=!1,e.inputList=[[new l("("),new g(t,e.color),new l("*"),new g(i,e.color),new l(")")]],e},t.prototype.blockMathDivide=function(t,i){var e=new n;return e.color="hsl(210, 100%, 40%)",e.canHaveNext=!1,e.canHavePrevious=!1,e.inputList=[[new l("("),new g(t,e.color),new l("/"),new g(i,e.color),new l(")")]],e},t.prototype.blockMathSubtract=function(t,i){var e=new n;return e.color="hsl(210, 100%, 40%)",e.canHaveNext=!1,e.canHavePrevious=!1,e.inputList=[[new l("("),new g(t,e.color),new l("-"),new g(i,e.color),new l(")")]],e},t.prototype.getBlocks=function(){var t=[];return t.push(this.blockIf()),t.push(this.blockIfElse()),t.push(this.blockFalse()),t.push(this.blockTrue()),t.push(this.blockPrint()),t.push(this.blockMathAdd()),t.push(this.blockMathMultiply()),t.push(this.blockMathDivide()),t.push(this.blockMathSubtract()),t.push(this.blockIf(this.blockTrue(),this.blockPrint(this.blockFalse()))),t},t.prototype.codeToBlock=function(t){return this.blockFalse()},t}(),k=document.createElement("div");document.body.appendChild(k),window.editorElement=k;var B=new v(k),m=new y;B.toolbox.addBlocksForLanguage(m),window.editor=B,B.render()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,