!function(t){var i={};function e(n){if(i[n])return i[n].exports;var o=i[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=i,e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=0)}([function(t,i,e){"use strict";e.r(i);for(var n,o=function(){return function(t,i,e,n){this.x=t,this.y=i,this.width=e,this.height=n}}(),s=function(){return function(t,i){this.x=t,this.y=i}}(),r=function(){function t(t,i){var e;this._partner=void 0,this.connectListeners=[],this.disconnectListeners=[],e=[t,i],this._block=e[0],this._anchor=e[1]}return t.prototype.handleDisconnect=function(){for(var t=0,i=this.disconnectListeners;t<i.length;t++){(0,i[t])(this,this._partner)}this._partner=void 0},t.prototype.addEventListener=function(t,i){"disconnect"==t?this.disconnectListeners.push(i):"connect"==t&&this.connectListeners.push(i)},t.prototype.handleConnect=function(t){this._partner=t;for(var i=0,e=this.connectListeners;i<e.length;i++){(0,e[i])(this,this._partner)}},Object.defineProperty(t.prototype,"block",{get:function(){return this._block},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"otherBlock",{get:function(){return this._partner?this._partner.block:void 0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"partner",{get:function(){return this._partner},set:function(t){this._partner!=t&&(this._partner&&(this.handleDisconnect(),this._partner.handleDisconnect()),t&&(this.handleConnect(t),t.handleConnect(this)))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"anchor",{get:function(){return this._anchor},set:function(t){this._anchor=t},enumerable:!0,configurable:!0}),t}(),h=12,a=6,u=12,p=8,c=8,l=4,d=4,g=16,b=4,f=36,w=18,v=function(){function t(){}return t.prototype.renderBlock=function(t){throw new Error("Method not implemented.")},t.prototype.path=function(t){var i="M 0,0";i=(i=t.previous?(i=(i=(i=(i=i+"l "+u+",0")+"l "+0*a+","+a)+"l "+(h-2*a*0)+",0")+"l "+0*a+","+-a)+"l "+(t.widths[0]-0-h-u)+",0":i+"l "+(t.widths[0]-0)+",0")+"l 0,"+(t.heights[0]+(t.widths.length<2?p+c:g)-0);for(var e=t.widths[0],n=1;n<t.widths.length;n++){var o=t.widths[n],s=o-e;n<t.widths.length-1&&t.widths[n+1];i=(i=s>0?t.data[n-1].next?(i=(i=(i=(i=i+"l "+u+",0")+"l "+0*a+","+a)+"l "+(h-2*a*0)+",0")+"l "+0*a+","+-a)+"l "+(s-0-h-u)+",0":i+"l "+(s-0)+",0":s<0?t.data[n-1].next?(i=(i=(i=(i=i+"l "+-(0-s-h-u)+",0")+"l "+0*a+","+a)+"l "+(2*a*0-h)+",0")+"l "+0*a+","+-a)+"l "+-u+",0":i+"l "+(s+0)+",0":t.data[n-1].next?(i=(i=(i=(i=i+"l "+u+",0")+"l "+0*a+","+a)+"l "+(h-2*a*0)+",0")+"l "+0*a+","+-a)+"l "+(s-h-u)+",0":i+"l "+s+",0")+"l 0,"+(t.heights[n]+g-0),e=o+0}var r=t.widths[t.widths.length-1];return i=(i=t.next?(i=(i=(i=(i=i+"l "+(0-r+h+u)+",0")+"l "+0*-a+","+a)+"l "+(2*a*0-h)+",0")+"l "+0*-a+","+-a)+"l "+-u+",0":i+"l "+(0-r)+",0")+"l 0,"+(0-t.tHeight)},t.prototype.renderHint=function(t){for(var i=p,e=0,n=[],o=[],s=[],r=!1,h=!1,a=0;a<t.inputList.length;a++){var u=t.inputList[a],v=f;r&&(v=128),s[a]={prev:r&&h,next:!1};var x=l,y=w+0;r=!1,h=!1;for(var k=0;k<u.length;k++){var m;if("InputStack"==u[k].type)v=48,x=Math.max(x,v),u[k].render(t.group),(m=u[k].group.getBBox()).height=u[k].height(),u[k].position.x=x,u[k].position.y=i-g/2,u[k].render(t.group),y=Math.max(y,m.height-g),r=!0,a>0&&(o[a-1]=Math.max(o[a-1],128)),a===t.inputList.length-1&&(o[a-1]=Math.max(o[a-1],128)),u[k].stack&&!u[k].stack.lastBlock().nextConnection||(h=!0,s[a].next=!0),s[a-1].next=!0;else u[k].position.x=x,u[k].position.y=i,u[k].render(t.group),(m=u[k].group.getBBox()).height=u[k].height(),x+=m.width+b,y=Math.max(y,m.height)}for(k=0;k<u.length;k++)"InputStack"!=u[k].type&&(u[k].position.y=i-u[k].height()/2+y/2,u[k].render(t.group));n.push(y),o.push(Math.max(x-b+d,v)),e=Math.max(e,o[o.length-1]),i+=y+g,a===t.inputList.length-1&&r&&(o[a+1]=128,n[a+1]=4,i+=n[a+1]+g,s[a+1]={prev:h,next:!1})}return{previous:t.canHavePrevious,next:t.canHaveNext,out:t.canHaveOutput,heights:n,tHeight:i-g+c,widths:o,mWidth:e,data:s}},t.prototype.compareHints=function(t,i){return!(!t||!i)&&(!(!t.heights||!i.heights)&&!(!t.heights||!i.heights))},t.prototype.shouldRender=function(t){throw new Error("Method not implemented.")},t}(),x=function(){function t(t,i,e,n){void 0===i&&(i=2),void 0===e&&(e=!0),void 0===n&&(n=!0),this.tabHeight=6,this.tabWidth=12,this.tabOffset=12,this.reporter=!1,this.layout=t,this.radius=i,this.next=e,this.previous=n}return t.prototype.path=function(){var t="M "+this.radius+",0";t=(t=(t=this.previous?(t=(t=(t=(t=t+"l "+this.tabOffset+",0")+"l "+0*this.tabHeight+","+this.tabHeight)+"l "+(this.tabWidth-2*this.tabHeight*0)+",0")+"l "+0*this.tabHeight+","+-this.tabHeight)+"l "+(this.layout.widths[0]-2*this.radius-this.tabWidth-this.tabOffset)+",0":t+"l "+(this.layout.widths[0]-2*this.radius)+",0")+"a"+this.radius+","+this.radius+",0,0,1,"+this.radius+","+this.radius)+"l 0,"+(this.layout.heights[0]+20-2*this.radius);for(var i=this.layout.widths[0],e=1;e<this.layout.widths.length;e++){var n=this.layout.widths[e],o=n-i;e<this.layout.widths.length-1&&this.layout.widths[e+1];o>2*this.radius?(t=t+"a"+this.radius+","+this.radius+",0,0,0,"+this.radius+","+this.radius,t=this.layout.data[e-1].next?(t=(t=(t=(t=t+"l "+this.tabOffset+",0")+"l "+0*this.tabHeight+","+this.tabHeight)+"l "+(this.tabWidth-2*this.tabHeight*0)+",0")+"l "+0*this.tabHeight+","+-this.tabHeight)+"l "+(o-2*this.radius-this.tabWidth-this.tabOffset)+",0":t+"l "+(o-2*this.radius)+",0"):o<2*-this.radius?(t=t+"a"+this.radius+","+this.radius+",0,0,1,"+-this.radius+","+this.radius,t=this.layout.data[e-1].next?(t=(t=(t=(t=t+"l "+-(-o+2*this.radius-this.tabWidth-this.tabOffset)+",0")+"l "+0*this.tabHeight+","+this.tabHeight)+"l "+(-this.tabWidth+2*this.tabHeight*0)+",0")+"l "+0*this.tabHeight+","+-this.tabHeight)+"l "+-this.tabOffset+",0":t+"l "+(o+2*this.radius)+",0"):(t=t+"a"+this.radius+","+this.radius+",0,0,1,"+-this.radius+","+this.radius,t=this.layout.data[e-1].next?(t=(t=(t=(t=t+"l "+this.tabOffset+",0")+"l "+0*this.tabHeight+","+this.tabHeight)+"l "+(this.tabWidth-2*this.tabHeight*0)+",0")+"l "+0*this.tabHeight+","+-this.tabHeight)+"l "+(o-this.tabWidth-this.tabOffset)+",0":t+"l "+o+",0"),t=(t=o<2*-this.radius?t+"a"+this.radius+","+this.radius+",0,0,0,"+-this.radius+","+this.radius:t+"a"+this.radius+","+this.radius+",0,0,1,"+this.radius+","+this.radius)+"l 0,"+(this.layout.heights[e]+20-2*this.radius),i=n+0}var s=this.layout.widths[this.layout.widths.length-1];return t=t+"a"+this.radius+","+this.radius+",0,0,1,"+-this.radius+","+this.radius,t=(t=(t=(t=this.next?(t=(t=(t=(t=t+"l "+(-s+2*this.radius+this.tabWidth+this.tabOffset)+",0")+"l "+0*-this.tabHeight+","+this.tabHeight)+"l "+(-this.tabWidth+2*this.tabHeight*0)+",0")+"l "+0*-this.tabHeight+","+-this.tabHeight)+"l "+-this.tabOffset+",0":t+"l "+(-s+2*this.radius)+",0")+"a"+this.radius+","+this.radius+",0,0,1,"+-this.radius+","+-this.radius)+"l 0,"+(-this.layout.tHeight+2*this.radius))+"a"+this.radius+","+this.radius+",0,0,1,"+this.radius+","+-this.radius},t}(),y=function(){function t(){this.renderHint=void 0,this.previousConnection=void 0,this.nextConnection=void 0,this.outputConnection=void 0,this.inputList=[[]],this.position=new s(0,0),this.color="hsl(0, 70%, 50%)";Math.floor(360*Math.random());this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.classList.add("block"),this.shape=document.createElementNS("http://www.w3.org/2000/svg","path"),this.shape.setAttribute("filter","url(#Bevel)"),this.group.appendChild(this.shape);var t=this;this.group.addEventListener("mousedown",function(i,e){var n=new s(i.clientX,i.clientY),o=new s(t.position.x+0,t.position.y+0),r=function(i,e){var r=new s(i.clientX,i.clientY);t.position.x=r.x-n.x+o.x,t.position.y=r.y-n.y+o.y},h=function(i,e){var a=new s(i.clientX,i.clientY);t.position.x=a.x-n.x+o.x,t.position.y=a.y-n.y+o.y,document.body.removeEventListener("mousemove",r),document.body.removeEventListener("mouseup",h)};document.body.addEventListener("mouseup",h),document.body.addEventListener("mousemove",r)})}return Object.defineProperty(t.prototype,"previous",{get:function(){return this.previousConnection?this.previousConnection.otherBlock:void 0},set:function(t){this.previousConnection&&(this.previousConnection.partner=t.nextConnection)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"canHaveNext",{get:function(){return!!this.nextConnection},set:function(t){this.canHaveNext!=t&&(t?(this.nextConnection=new r(this,new s(0,0)),this.nextConnection.addEventListener("disconnect",function(t,i){i&&i.block&&i.block.group.parentNode==this.group&&this.group.removeChild(i.block.group)})):(this.nextConnection.partner=void 0,this.nextConnection=void 0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"canHavePrevious",{get:function(){return!!this.previousConnection},set:function(t){this.canHavePrevious!=t&&(t?this.previousConnection=new r(this,new s(0,0)):(this.previousConnection.partner=void 0,this.previousConnection=void 0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"canHaveOutput",{get:function(){return!!this.outputConnection},set:function(t){this.canHaveOutput!=t&&(t?this.outputConnection=new r(this,new s(0,0)):(this.outputConnection.partner=void 0,this.outputConnection=void 0))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"next",{get:function(){return this.nextConnection?this.nextConnection.otherBlock:void 0},set:function(t){this.nextConnection&&(this.nextConnection.partner=t.previousConnection)},enumerable:!0,configurable:!0}),t.prototype.toCode=function(){return"undefined"},t.prototype.lastBlock=function(){return this.next?this.next.lastBlock():this},t.prototype.layoutChildren=function(){return(new v).renderHint(this)},t.prototype.layoutNext=function(){this.next&&(this.next.position.x=0,this.next.position.y=this.bBox.height,this.next.render(this.group))},t.prototype.append=function(t){return this.next=t,this},t.prototype.render=function(t){var i=new v;this.group.parentNode!==t&&t.appendChild(this.group);var e=i.renderHint(this);this.bBox=new o(this.position.x,this.position.y,128,e.tHeight),this.shape.setAttribute("d",i.path(e)),this.renderHint=e,this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.shape.setAttribute("fill",this.color),this.layoutNext()},t}(),k=function(){function t(){this.position=new s(0,0),this.color="hsl(0, 100%, 50%)",this.width=48,this.type="InputSVG",this.width=48*Math.random()+24;Math.floor(360*Math.random());this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.classList.add("block"),this.shape=document.createElementNS("http://www.w3.org/2000/svg","path"),this.shape.setAttribute("filter","url(#Bevel2)"),this.group.appendChild(this.shape)}return t.prototype.toCode=function(){return"undefined"},t.prototype.layoutChildren=function(){},t.prototype.height=function(){return this.group.getBBox().height},t.prototype.render=function(t){this.layoutChildren(),this.group.parentNode!==t&&t.appendChild(this.group),this.bBox=new o(this.position.x,this.position.y,this.width,24);var i=new x({heights:[this.bBox.height-20],tHeight:this.bBox.height,widths:[this.bBox.width],mWidth:this.bBox.width,data:[{prev:!1,next:!1}]},0,!1,!1);this.shape.setAttribute("d",i.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.shape.setAttribute("fill",this.color)},t}(),m=(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)i.hasOwnProperty(e)&&(t[e]=i[e])},function(t,i){function e(){this.constructor=t}n(t,i),t.prototype=null===i?Object.create(i):(e.prototype=i.prototype,new e)}),B=function(t){function i(i){var e=t.call(this)||this;return e.position=new s(0,0),e.color="hsl(0, 100%, 50%)",e.width=48,e.type="InputStack",e.stack=i,e}return m(i,t),i.prototype.toCode=function(){return"undefined"},i.prototype.height=function(){return this.bBox.height},i.prototype.setBlock=function(t){if(this.stack){var i=this.stack;this.stack.group.parentNode==this.group&&this.group.removeChild(this.stack.group),this.stack=t,i.group.parentNode==this.group&&this.group.removeChild(i.group)}this.stack=t},i.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.stack?(this.stack.render(this.group),this.bBox=new o(this.position.x,this.position.y,this.stack.group.getBBox().width,this.stack.group.getBBox().height-(this.stack.lastBlock().canHaveNext?6:0))):this.bBox=new o(this.position.x,this.position.y,24,24);var i=new x({heights:[this.bBox.height-20],tHeight:this.bBox.height,widths:[this.bBox.width],mWidth:this.bBox.width,data:[{prev:!1,next:!1}]},0,!1,!1);this.shape.setAttribute("d",i.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.group.setAttribute("id","stack-man"),this.shape.setAttribute("fill","transparent"),this.stack&&(this.stack.position=new s(0,0),this.stack.render(this.group))},i}(k),H=function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)i.hasOwnProperty(e)&&(t[e]=i[e])};return function(i,e){function n(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}}(),C=function(t){function i(i){var e=t.call(this)||this;return e.position=new s(0,0),e.color="hsl(0, 100%, 50%)",e.width=48,e.type="InputLabel",e.text=i||"",e.label=document.createElementNS("http://www.w3.org/2000/svg","text"),e.label.setAttribute("fill","white"),e.label.setAttribute("y","2"),e.label.setAttribute("style","alignment-baseline: hanging;font-family:monospace;font-size:16px;user-select:none;"),e}return H(i,t),i.prototype.toCode=function(){return"undefined"},i.prototype.height=function(){return this.bBox.height},i.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.label.parentNode!==this.group&&this.group.appendChild(this.label),this.bBox=new o(this.position.x,this.position.y,this.label.getBBox().width,this.label.getBBox().height);var i=new x({heights:[this.bBox.height-20],tHeight:this.bBox.height,widths:[this.bBox.width],mWidth:this.bBox.width,data:[{prev:!1,next:!1}]},0,!1,!1);this.shape.setAttribute("d",i.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.group.setAttribute("id","stack-man"),this.label.innerHTML=this.text,this.shape.setAttribute("fill","transparent")},i}(k),A=function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)i.hasOwnProperty(e)&&(t[e]=i[e])};return function(i,e){function n(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}}(),O=function(t){function i(i,e){var n=t.call(this)||this;return n.type="InputBlock",n.position=new s(0,0),n.color="hsl(0, 100%, 50%)",n.width=48,n.stack=i,e&&(n.color=e),n}return A(i,t),i.prototype.toCode=function(){return"undefined"},i.prototype.height=function(){return this.bBox.height},i.prototype.setBlock=function(t){if(this.stack){var i=this.stack;this.stack.group.parentNode==this.group&&this.group.removeChild(this.stack.group),this.stack=t,i.group.parentNode==this.group&&this.group.removeChild(i.group)}this.stack=t},i.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.stack?(this.stack.render(this.group),this.bBox=new o(this.position.x,this.position.y,this.stack.group.getBBox().width,this.stack.group.getBBox().height-(this.stack.lastBlock().canHaveNext?6:0))):this.bBox=new o(this.position.x,this.position.y,24,24);var i=new x({heights:[this.bBox.height-20],tHeight:this.bBox.height,widths:[this.bBox.width],mWidth:this.bBox.width,data:[{prev:!1,next:!1}]},0,!1,!1);this.shape.setAttribute("d",i.path()),this.group.setAttribute("transform","translate("+this.position.x+" "+this.position.y+")"),this.group.setAttribute("id","stack-man"),this.shape.setAttribute("fill",this.color),this.stack&&(this.stack.position=new s(0,0),this.stack.render(this.group))},i}(k),_=function(){function t(t){this.blocks=[],this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.group.classList.add("toolbox"),this.background=document.createElementNS("http://www.w3.org/2000/svg","rect"),this.background.setAttribute("width","200px"),this.background.setAttribute("height","10px"),this.background.setAttribute("fill","url(#Stripes)"),this.background.setAttribute("filter","url(#Bevel)"),this.background.classList.add("toolbox-background"),this.group.appendChild(this.background),this.editor=t,this.bBox=new o(0,0,500,10)}return t.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.bBox=new o(0,0,300,this.editor.container.clientHeight),this.background.setAttribute("width",this.bBox.width+"px"),this.background.setAttribute("height",this.bBox.height+"px"),this.group.setAttribute("transform","translate("+this.bBox.x+" "+this.bBox.y+")");for(var i=10,e=0;e<this.blocks.length;e++)this.blocks[e].group.parentNode!==this.group&&(this.blocks[e].position.x=10,this.blocks[e].position.y=i),this.blocks[e].render(this.group),i+=this.blocks[e].group.getBBox().height+10},t.prototype.addBlocksForLanguage=function(t){this.blocks=this.blocks.concat(t.getBlocks())},t}(),L=[],P=0;P<12;P++)L.push(30*P);var N=function(){function t(t){this.group=document.createElementNS("http://www.w3.org/2000/svg","g"),this.editor=t,this.background=document.createElementNS("http://www.w3.org/2000/svg","rect"),this.background.setAttribute("width","200px"),this.background.setAttribute("height","10px"),this.background.setAttribute("fill","rgb(250,250,250)"),this.background.classList.add("workspace-background"),this.group.appendChild(this.background),this.bBox=new o(500,0,500,500)}return t.prototype.render=function(t){this.group.parentNode!==t&&t.appendChild(this.group),this.bBox=new o(this.editor.toolbox.bBox.width,0,this.editor.container.clientWidth-this.editor.toolbox.bBox.width,this.editor.container.clientHeight),this.background.setAttribute("width",this.bBox.width+"px"),this.background.setAttribute("height",this.bBox.height+"px"),this.group.setAttribute("transform","translate("+this.bBox.x+" "+this.bBox.y+")")},t}(),S=function(){function t(t){this.container=t,this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svg.innerHTML='\n    <filter id="Bevel" filterUnits="objectBoundingBox" x="-10%" y="-10%" width="150%" height="150%">\n  \t\t<feGaussianBlur in="SourceAlpha" stdDeviation="1" result="blur"/>\n  \t\t<feSpecularLighting in="blur" surfaceScale="3" specularConstant="0.5" specularExponent="5" result="specOut" lighting-color="white">\n  \t\t\t<fePointLight x="-5000" y="-5000" z="8000"/>\n  \t\t</feSpecularLighting>\n  \t\t<feComposite in="specOut" in2="SourceAlpha" operator="in" result="specOut2"/>\n      <feComposite in="SourceGraphic" in2="specOut2" operator="arithmetic" k1="0" k2="0" k3="1" k4="-0.3" result="litPaint0" />\n  \t\t<feComposite in="SourceGraphic" in2="litPaint0" operator="arithmetic" k1="0" k2="1" k3="1" k4="0" result="litPaint" />\n  \t</filter>\n    <filter id="Bevel2" filterUnits="objectBoundingBox" x="-10%" y="-10%" width="150%" height="150%">\n  \t\t<feGaussianBlur in="SourceAlpha" stdDeviation="1" result="blur"/>\n  \t\t<feSpecularLighting in="blur" surfaceScale="3" specularConstant="0.5" specularExponent="5" result="specOut" lighting-color="white">\n  \t\t\t<fePointLight x="5000" y="5000" z="8000"/>\n  \t\t</feSpecularLighting>\n  \t\t<feComposite in="specOut" in2="SourceAlpha" operator="in" result="specOut2"/>\n      <feComposite in="SourceGraphic" in2="specOut2" operator="arithmetic" k1="0" k2="0" k3="1" k4="-0.3" result="litPaint0" />\n  \t\t<feComposite in="SourceGraphic" in2="litPaint0" operator="arithmetic" k1="0" k2="1" k3="1" k4="0" result="litPaint" />\n  \t</filter>\n    <defs><pattern id="Stripes" patternUnits="userSpaceOnUse" width="50" height="50" patternTransform="rotate(45)">\n    <rect x="0" y="0" width="50" height="50" fill="#444444"></rect>\n    <line x1="25" y="0" x2="25" y2="50" stroke="#444444" stroke-width="25" />\n    </pattern></defs>\n    ',this.container.appendChild(this.svg),this.svg.setAttribute("width",this.container.clientWidth+""),this.svg.setAttribute("height",this.container.clientHeight+""),this.toolbox=new _(this),this.workspace=new N(this);var i=this;window.setInterval(function(){i.render()},100)}return t.prototype.render=function(){this.svg.setAttribute("width",this.container.clientWidth+""),this.svg.setAttribute("height",this.container.clientHeight+""),this.toolbox.render(this.svg),this.workspace.render(this.svg)},t}(),M=function(){function t(){}return t.prototype.blockIf=function(t,i){var e=new y;return e.color="hsl(180, 100%, 40%)",e.canHaveNext=!0,e.canHavePrevious=!0,e.inputList=[[new C("if ("),new O(t,e.color),new C("):")],[new B(i)]],e},t.prototype.blockIfElse=function(){var t=new y;return t.color="hsl(180, 100%, 40%)",t.canHaveNext=!0,t.canHavePrevious=!0,t.inputList=[[new C("if ("),new O(this.blockFalse(),t.color),new C("):")],[new B],[new C("else:")],[new B]],t},t.prototype.blockFalse=function(){var t=new y;return t.color="hsl(120, 100%, 40%)",t.canHaveNext=!1,t.canHavePrevious=!1,t.inputList=[[new C("False")]],t},t.prototype.blockTrue=function(){var t=new y;return t.color="hsl(120, 100%, 40%)",t.canHaveNext=!1,t.canHavePrevious=!1,t.inputList=[[new C("True")]],t},t.prototype.blockPrint=function(t){var i=new y;return i.color="hsl(60, 100%, 40%)",i.canHaveNext=!0,i.canHavePrevious=!0,i.inputList=[[new C("print ("),new O(t,i.color),new C(")")]],i},t.prototype.blockMathAdd=function(t,i){var e=new y;return e.color="hsl(210, 100%, 40%)",e.canHaveNext=!1,e.canHavePrevious=!1,e.inputList=[[new C("("),new O(t,e.color),new C("+"),new O(i,e.color),new C(")")]],e},t.prototype.blockMathMultiply=function(t,i){var e=new y;return e.color="hsl(210, 100%, 40%)",e.canHaveNext=!1,e.canHavePrevious=!1,e.inputList=[[new C("("),new O(t,e.color),new C("*"),new O(i,e.color),new C(")")]],e},t.prototype.blockMathDivide=function(t,i){var e=new y;return e.color="hsl(210, 100%, 40%)",e.canHaveNext=!1,e.canHavePrevious=!1,e.inputList=[[new C("("),new O(t,e.color),new C("/"),new O(i,e.color),new C(")")]],e},t.prototype.blockMathSubtract=function(t,i){var e=new y;return e.color="hsl(210, 100%, 40%)",e.canHaveNext=!1,e.canHavePrevious=!1,e.inputList=[[new C("("),new O(t,e.color),new C("-"),new O(i,e.color),new C(")")]],e},t.prototype.getBlocks=function(){var t=[];return t.push(this.blockIf()),t.push(this.blockIfElse()),t.push(this.blockFalse()),t.push(this.blockTrue()),t.push(this.blockPrint()),t.push(this.blockMathAdd()),t.push(this.blockMathMultiply()),t.push(this.blockMathDivide()),t.push(this.blockMathSubtract()),t.push(this.blockIf(this.blockTrue(),this.blockPrint(this.blockFalse()).append(this.blockPrint(this.blockTrue())))),t},t.prototype.codeToBlock=function(t){return this.blockFalse()},t}(),E=document.createElement("div");document.body.appendChild(E),window.editorElement=E;var j=new S(E),W=new M;j.toolbox.addBlocksForLanguage(W),window.editor=j,j.render()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Rvb2xib3gudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25uZWN0aW9uLnRzIiwid2VicGFjazovLy8uL3NyYy9kZWZhdWx0cy9EZWZhdWx0QmxvY2tSZW5kZXJlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYmxvY2tTVkcudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lucHV0LnRzIiwid2VicGFjazovLy8uL3NyYy9zdGFja0lucHV0LnRzIiwid2VicGFjazovLy8uL3NyYy9sYWJlbElucHV0LnRzIiwid2VicGFjazovLy8uL3NyYy9ibG9ja0lucHV0LnRzIiwid2VicGFjazovLy8uL3NyYy93b3Jrc3BhY2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvZGVGbGlwLnRzIiwid2VicGFjazovLy8uL3NyYy9weXRob24vTGFuZ3VhZ2VQeXRob24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsInZhbHVlIiwibiIsIl9fZXNNb2R1bGUiLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJSZWN0YW5nbGUiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwidGhpcyIsIlZlY3RvciIsIkNvbm5lY3Rpb24iLCJibG9jayIsImFuY2hvciIsIl9wYXJ0bmVyIiwidW5kZWZpbmVkIiwiY29ubmVjdExpc3RlbmVycyIsImRpc2Nvbm5lY3RMaXN0ZW5lcnMiLCJfYSIsIl9ibG9jayIsIl9hbmNob3IiLCJoYW5kbGVEaXNjb25uZWN0IiwiX2kiLCJsZW5ndGgiLCJhZGRFdmVudExpc3RlbmVyIiwidHlwZSIsImhhbmRsZXIiLCJwdXNoIiwiaGFuZGxlQ29ubmVjdCIsIm90aGVyIiwiZGVmYXVsdFJlbmRlclZhbHVlcyIsIkRlZmF1bHRCbG9ja1JlbmRlcmVyIiwicmVuZGVyQmxvY2siLCJFcnJvciIsInBhdGgiLCJoaW50IiwicHJldmlvdXMiLCJ3aWR0aHMiLCJoZWlnaHRzIiwicHJlV2lkdGgiLCJuZXdXaWR0aCIsIndEaWZmIiwiZGF0YSIsIm5leHQiLCJsYXN0VyIsInRIZWlnaHQiLCJyZW5kZXJIaW50IiwiY3kiLCJtYXhXaWR0aCIsInN0YWNrIiwiblN0YWNrIiwiaW5wdXRMaXN0Iiwicm93IiwibG93WCIsInByZXYiLCJjeCIsImoiLCJiYiIsIk1hdGgiLCJtYXgiLCJyZW5kZXIiLCJncm91cCIsImdldEJCb3giLCJwb3NpdGlvbiIsImxhc3RCbG9jayIsIm5leHRDb25uZWN0aW9uIiwiY2FuSGF2ZVByZXZpb3VzIiwiY2FuSGF2ZU5leHQiLCJvdXQiLCJjYW5IYXZlT3V0cHV0IiwibVdpZHRoIiwiY29tcGFyZUhpbnRzIiwiaGludDEiLCJoaW50MiIsInNob3VsZFJlbmRlciIsIlNxdWFyZUJsb2NrU2hhcGUiLCJsYXlvdXQiLCJyYWRpdXMiLCJ0YWJIZWlnaHQiLCJ0YWJXaWR0aCIsInRhYk9mZnNldCIsInJlcG9ydGVyIiwiYmxvY2tTVkdfQmxvY2tTVkciLCJCbG9ja1NWRyIsInByZXZpb3VzQ29ubmVjdGlvbiIsIm91dHB1dENvbm5lY3Rpb24iLCJjb2xvciIsImZsb29yIiwicmFuZG9tIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50TlMiLCJjbGFzc0xpc3QiLCJhZGQiLCJzaGFwZSIsInNldEF0dHJpYnV0ZSIsImFwcGVuZENoaWxkIiwibWUiLCJldmVudCIsInVpIiwic3RhcnRNUG9zIiwiY2xpZW50WCIsImNsaWVudFkiLCJzdGFydFBvcyIsImYyIiwiZW5kTVBvcyIsImYzIiwiYm9keSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvdGhlckJsb2NrIiwicGFydG5lciIsIm5ld1ZhbCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInRvQ29kZSIsImxheW91dENoaWxkcmVuIiwibGF5b3V0TmV4dCIsImJCb3giLCJhcHBlbmQiLCJwYXJlbnQiLCJlbmdpbmUiLCJpbnB1dF9JbnB1dFNWRyIsIklucHV0U1ZHIiwiYnNoYXBlIiwic3RhY2tJbnB1dF9JbnB1dFN0YWNrIiwiX3N1cGVyIiwiSW5wdXRTdGFjayIsIl90aGlzIiwiX19leHRlbmRzIiwic2V0QmxvY2siLCJvbGRTdGFjayIsImxhYmVsSW5wdXRfSW5wdXRMYWJlbCIsIklucHV0TGFiZWwiLCJ0ZXh0IiwibGFiZWwiLCJsYWJlbElucHV0X2V4dGVuZHMiLCJpbm5lckhUTUwiLCJibG9ja0lucHV0X0lucHV0QmxvY2siLCJJbnB1dEJsb2NrIiwiYmxvY2tJbnB1dF9leHRlbmRzIiwidG9vbGJveF9Ub29sYm94IiwiVG9vbGJveCIsImVkaXRvciIsImJsb2NrcyIsImJhY2tncm91bmQiLCJjb250YWluZXIiLCJjbGllbnRIZWlnaHQiLCJhZGRCbG9ja3NGb3JMYW5ndWFnZSIsImxhbmciLCJjb25jYXQiLCJnZXRCbG9ja3MiLCJjcCIsInRvb2xib3hfaSIsIndvcmtzcGFjZV9Xb3Jrc3BhY2UiLCJXb3Jrc3BhY2UiLCJ0b29sYm94IiwiY2xpZW50V2lkdGgiLCJjb2RlRmxpcF9Db2RlRmxpcCIsIkNvZGVGbGlwIiwic3ZnIiwid29ya3NwYWNlIiwid2luZG93Iiwic2V0SW50ZXJ2YWwiLCJMYW5ndWFnZVB5dGhvbl9MYW5ndWFnZVB5dGhvbiIsIkxhbmd1YWdlUHl0aG9uIiwiYmxvY2tJZiIsInRlc3QiLCJjb25zZXF1ZW50IiwiYiIsImJsb2NrSWZFbHNlIiwiYmxvY2tGYWxzZSIsImJsb2NrVHJ1ZSIsImJsb2NrUHJpbnQiLCJibG9ja01hdGhBZGQiLCJibG9ja01hdGhNdWx0aXBseSIsImJsb2NrTWF0aERpdmlkZSIsImJsb2NrTWF0aFN1YnRyYWN0IiwiY29kZVRvQmxvY2siLCJzdHIiLCJlZGl0b3JFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyY19lZGl0b3IiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxHQUNBSyxjQUFBLEVBQ0FDLFlBQUEsRUFDQUMsSUFBQU4sS0FNQVosRUFBQW1CLEVBQUEsU0FBQWpCLEdBQ0FZLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURrQixPQUFBLEtBSWpEcEIsRUFBQXFCLEVBQUEsU0FBQWxCLEdBQ0EsSUFBQVMsRUFBQVQsS0FBQW1CLFdBQ0EsV0FBMkIsT0FBQW5CLEVBQUEsU0FDM0IsV0FBaUMsT0FBQUEsR0FFakMsT0FEQUgsRUFBQVUsRUFBQUUsRUFBQSxJQUFBQSxHQUNBQSxHQUlBWixFQUFBYSxFQUFBLFNBQUFVLEVBQUFDLEdBQXNELE9BQUFWLE9BQUFXLFVBQUFDLGVBQUFuQixLQUFBZ0IsRUFBQUMsSUFHdER4QixFQUFBMkIsRUFBQSxHQUlBM0IsSUFBQTRCLEVBQUEseUNDVEEsSUMxREEsTUFBQUMsRUFBQSxXQVdBLE9BTkUsU0FBWUMsRUFBV0MsRUFBV0MsRUFBZUMsR0FDL0NDLEtBQUtKLEVBQUlBLEVBQ1RJLEtBQUtILEVBQUlBLEVB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S2xCLEtBQUtnSyxjQUNqQjNCLEVBQU9uSCxLQUFLbEIsS0FBS2lLLGFBQ2pCNUIsRUFBT25ILEtBQUtsQixLQUFLa0ssY0FDakI3QixFQUFPbkgsS0FBS2xCLEtBQUttSyxnQkFDakI5QixFQUFPbkgsS0FBS2xCLEtBQUtvSyxxQkFDakIvQixFQUFPbkgsS0FBS2xCLEtBQUtxSyxtQkFDakJoQyxFQUFPbkgsS0FBS2xCLEtBQUtzSyxxQkFFakJqQyxFQUFPbkgsS0FBS2xCLEtBQUsySixRQUFRM0osS0FBS2lLLFlBQWFqSyxLQUFLa0ssV0FBV2xLLEtBQUtnSyxjQUFjcEQsT0FBTzVHLEtBQUtrSyxXQUFXbEssS0FBS2lLLGdCQUNuRzVCLEdBRVRxQixFQUFBbkssVUFBQWdMLFlBQUEsU0FBWUMsR0FDVixPQUFPeEssS0FBS2dLLGNBRWhCTixFQWpHQSxHQ0hJZSxFQUE2QnpGLFNBQVMwRixjQUFjLE9BQ3hEMUYsU0FBU2lCLEtBQUtYLFlBQVltRixHQUNwQmxCLE9BQVFrQixjQUFjQSxFQUM1QixJQUFJRSxFQUFnQixJQUFJeEIsRUFBU3NCLEdBQzdCL0IsRUFBYyxJQUFJZSxFQUN0QmtCLEVBQU8xQixRQUFRUixxQkFBcUJDLEdBQzlCYSxPQUFRbkIsT0FBT3VDLEVBQ3JCQSxFQUFPeEgiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAwKTtcbiIsImltcG9ydCB7IFJlbmRlcmFibGUgfSBmcm9tIFwiLi9yZW5kZXJhYmxlXCI7XG5pbXBvcnQgeyBDb2RlRmxpcCB9IGZyb20gXCIuL2NvZGVGbGlwXCI7XG5pbXBvcnQgeyBSZWN0YW5nbGUgfSBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHsgQmxvY2tTVkcgfSBmcm9tIFwiLi9ibG9ja1NWR1wiO1xuaW1wb3J0IHsgSW5wdXRTVkcgfSBmcm9tIFwiLi9pbnB1dFwiO1xuaW1wb3J0IHsgSW5wdXRTdGFjayB9IGZyb20gXCIuL3N0YWNrSW5wdXRcIjtcbmltcG9ydCB7IElucHV0TGFiZWwgfSBmcm9tIFwiLi9sYWJlbElucHV0XCI7XG5pbXBvcnQgeyBIb3JyaWJsZSB9IGZyb20gXCIuL2hvcnJpYmxlXCI7XG5pbXBvcnQgeyBJbnB1dEJsb2NrIH0gZnJvbSBcIi4vYmxvY2tJbnB1dFwiO1xuaW1wb3J0IHsgTGFuZ3VhZ2UgfSBmcm9tIFwiLi9sYW5ndWFnZVwiO1xuXG5jbGFzcyBUb29sYm94IGltcGxlbWVudHMgUmVuZGVyYWJsZSB7XG4gIGVkaXRvcjogQ29kZUZsaXA7XG4gIGJCb3g6IFJlY3RhbmdsZTtcbiAgZ3JvdXA6IFNWR0dFbGVtZW50O1xuICBiYWNrZ3JvdW5kOiBTVkdSZWN0RWxlbWVudDtcbiAgYmxvY2tzOiBBcnJheTxCbG9ja1NWRz4gPSBbXTtcbiAgcmVuZGVyKHBhcmVudDogU1ZHR0VsZW1lbnQgfCBTVkdFbGVtZW50KTogdm9pZCB7XG4gICAgaWYgKHRoaXMuZ3JvdXAucGFyZW50Tm9kZSAhPT0gcGFyZW50KSB7XG4gICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQodGhpcy5ncm91cCk7XG4gICAgfVxuICAgIHRoaXMuYkJveCA9IG5ldyBSZWN0YW5nbGUoMCwgMCwgMzAwLCB0aGlzLmVkaXRvci5jb250YWluZXIuY2xpZW50SGVpZ2h0KTtcbiAgICB0aGlzLmJhY2tncm91bmQuc2V0QXR0cmlidXRlKFwid2lkdGhcIiwgdGhpcy5iQm94LndpZHRoICsgXCJweFwiKTtcbiAgICB0aGlzLmJhY2tncm91bmQuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIHRoaXMuYkJveC5oZWlnaHQgKyBcInB4XCIpO1xuICAgIHRoaXMuZ3JvdXAuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgdGhpcy5iQm94LnggKyBcIiBcIiArIHRoaXMuYkJveC55ICsgXCIpXCIpO1xuICAgIHZhciBjeCA9IDEwO1xuICAgIHZhciBjeSA9IDEwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ibG9ja3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICh0aGlzLmJsb2Nrc1tpXS5ncm91cC5wYXJlbnROb2RlICE9PSB0aGlzLmdyb3VwKSB7XG4gICAgICAgIHRoaXMuYmxvY2tzW2ldLnBvc2l0aW9uLnggPSBjeDtcbiAgICAgICAgdGhpcy5ibG9ja3NbaV0ucG9zaXRpb24ueSA9IGN5O1xuICAgICAgfVxuICAgICAgdGhpcy5ibG9ja3NbaV0ucmVuZGVyKHRoaXMuZ3JvdXApO1xuICAgICAgY3kgKz0gdGhpcy5ibG9ja3NbaV0uZ3JvdXAuZ2V0QkJveCgpLmhlaWdodCArIDEwO1xuICAgIH1cbiAgfVxuICBjb25zdHJ1Y3RvcihlZGl0b3I6IENvZGVGbGlwKSB7XG4gICAgdGhpcy5ncm91cCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwiZ1wiKTtcbiAgICB0aGlzLmdyb3VwLmNsYXNzTGlzdC5hZGQoXCJ0b29sYm94XCIpO1xuICAgIHRoaXMuYmFja2dyb3VuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwicmVjdFwiKTtcbiAgICB0aGlzLmJhY2tncm91bmQuc2V0QXR0cmlidXRlKFwid2lkdGhcIiwgXCIyMDBweFwiKTtcbiAgICB0aGlzLmJhY2tncm91bmQuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIFwiMTBweFwiKTtcbiAgICB0aGlzLmJhY2tncm91bmQuc2V0QXR0cmlidXRlKFwiZmlsbFwiLCBcInVybCgjU3RyaXBlcylcIik7Ly9yZ2IoMjAwLDIwMCwyMDApXCIpO1xuICAgIHRoaXMuYmFja2dyb3VuZC5zZXRBdHRyaWJ1dGUoXCJmaWx0ZXJcIiwgXCJ1cmwoI0JldmVsKVwiKTtcbiAgICB0aGlzLmJhY2tncm91bmQuY2xhc3NMaXN0LmFkZChcInRvb2xib3gtYmFja2dyb3VuZFwiKTtcbiAgICB0aGlzLmdyb3VwLmFwcGVuZENoaWxkKHRoaXMuYmFja2dyb3VuZCk7XG4gICAgdGhpcy5lZGl0b3IgPSBlZGl0b3I7XG4gICAgdGhpcy5iQm94ID0gbmV3IFJlY3RhbmdsZSgwLCAwLCA1MDAsIDEwKTtcbiAgICAvKmZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7XG4gICAgICB0aGlzLmJsb2Nrcy5wdXNoKHJhbmRCbG9jayg0KSk7XG4gICAgfSovXG4gIH1cbiAgYWRkQmxvY2tzRm9yTGFuZ3VhZ2UobGFuZzogTGFuZ3VhZ2UpOiB2b2lkIHtcbiAgICB0aGlzLmJsb2NrcyA9IHRoaXMuYmxvY2tzLmNvbmNhdChsYW5nLmdldEJsb2NrcygpKTtcbiAgfVxuICAvL3RoaXMuYkJveD1uZXcgUmVjdGFuZ2xlKDIwMCwwLDUwMCw1MDApO1xufVxudmFyIGNwOiBudW1iZXJbXSA9IFtdO1xuZm9yICh2YXIgaSA9IDA7IGkgPCAxMjsgaSsrKSB7XG4gIGNwLnB1c2goMzYwIC8gMTIgKiBpKTtcbn1cbmZ1bmN0aW9uIHJhbmRCbG9jayhpdGVyYXRpb25zOiBudW1iZXIpOiBCbG9ja1NWRyB7XG4gIHZhciBrd2xpc3QgPSBbJ0ZhbHNlJywgJ05vbmUnLCAnVHJ1ZScsICdhbmQnLCAnYXMnLCAnYXNzZXJ0JywgJ2JyZWFrJywgJ2NsYXNzJywgJ2NvbnRpbnVlJywgJ2RlZicsICdkZWwnLCAnZWxpZicsICdlbHNlJywgJ2V4Y2VwdCcsICdmaW5hbGx5JywgJ2ZvcicsICdmcm9tJywgJ2dsb2JhbCcsICdpZicsICdpbXBvcnQnLCAnaW4nLCAnaXMnLCAnbGFtYmRhJywgJ25vbmxvY2FsJywgJ25vdCcsICdvcicsICdwYXNzJywgJ3JhaXNlJywgJ3JldHVybicsICd0cnknLCAnd2hpbGUnLCAnd2l0aCcsICd5aWVsZCddO1xuICB2YXIgYiA9IG5ldyBCbG9ja1NWRygpO1xuICB2YXIgaHVlID0gY3BbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY3AubGVuZ3RoKV07XG4gIGIuY29sb3IgPSBcImhzbChcIiArIGh1ZSArIFwiLCAxMDAlLCA0MCUpXCI7XG4gIGlmICghKGl0ZXJhdGlvbnMgPiAwKSkge1xuICAgIHJldHVybiBiO1xuICB9XG4gIGlmIChNYXRoLnJhbmRvbSgpIDwgMC41KSB7XG4gICAgYi5jYW5IYXZlTmV4dCA9IHRydWU7XG4gICAgYi5jYW5IYXZlUHJldmlvdXMgPSB0cnVlO1xuICAgIGIubmV4dCA9IG5ldyBCbG9ja1NWRygpO1xuICAgIGIubmV4dC5jYW5IYXZlTmV4dCA9IHRydWU7XG4gICAgYi5uZXh0LmNhbkhhdmVQcmV2aW91cyA9IHRydWU7XG4gICAgdmFyIGh1ZTIgPSBjcFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjcC5sZW5ndGgpXTtcbiAgICBiLm5leHQuY29sb3IgPSBcImhzbChcIiArIGh1ZTIgKyBcIiwgMTAwJSwgNDAlKVwiO1xuICB9XG4gIHZhciBrID0gTWF0aC5yYW5kb20oKSAqIDQgLSAxO1xuICBmb3IgKHZhciBqID0gMDsgaiA8IGs7IGorKykge1xuICAgIGIuaW5wdXRMaXN0W2pdID0gW107XG4gICAgdmFyIG0gPSBiLmlucHV0TGlzdFtqXTtcbiAgICB2YXIgaCA9IE1hdGgucmFuZG9tKCkgKiA1O1xuICAgIGlmIChNYXRoLnJhbmRvbSgpID4gMC41IHx8IGogIT09IDEpIHtcbiAgICAgIGZvciAodmFyIGwgPSAwOyBsIDwgaDsgbCsrKSB7XG4gICAgICAgIHZhciBtZyA9IG5ldyBJbnB1dExhYmVsKCk7XG4gICAgICAgIG1nLnRleHQgPSBrd2xpc3RbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICoga3dsaXN0Lmxlbmd0aCldOy8vWzEsIDEsIDEsIDEsIDEsIDEsIDEsIDFdLm1hcCh4ID0+IFN0cmluZy5mcm9tQ2hhckNvZGUoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjYpICsgNjUpKS5qb2luKFwiXCIpO1xuICAgICAgICB2YXIgcSA9IE1hdGgucmFuZG9tKCkgPiAwLjU7XG4gICAgICAgIHZhciBnID0gcSA/IG5ldyBJbnB1dEJsb2NrKCkgOiBtZztcbiAgICAgICAgaWYgKHEpIHtcbiAgICAgICAgICB2YXIgZzMgPSBuZXcgSW5wdXRCbG9jaygpO1xuICAgICAgICAgIGczLnNldEJsb2NrKHJhbmRCbG9jayhpdGVyYXRpb25zIC0gMikpO1xuICAgICAgICAgIGcgPSBnMztcbiAgICAgICAgfVxuICAgICAgICB2YXIgaHVlMiA9IGNwW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNwLmxlbmd0aCldO1xuICAgICAgICBnLmNvbG9yID0gYi5jb2xvcjsvLyBcImhzbChcIiArIGh1ZTIgKyBcIiwgMTAwJSwgNTAlKVwiO1xuICAgICAgICBiLmlucHV0TGlzdFtqXVtsXSA9IGc7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBnMiA9IG5ldyBJbnB1dFN0YWNrKCk7XG4gICAgICB2YXIgaHVlMiA9IGNwW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNwLmxlbmd0aCldO1xuICAgICAgZzIuc2V0QmxvY2socmFuZEJsb2NrKGl0ZXJhdGlvbnMgLSAxKSk7XG4gICAgICBnMi5zdGFjay5jYW5IYXZlUHJldmlvdXMgPSB0cnVlO1xuICAgICAgZzIuY29sb3IgPSBiLmNvbG9yOy8vIFwiaHNsKFwiICsgaHVlMiArIFwiLCAxMDAlLCA1MCUpXCI7XG4gICAgICBiLmlucHV0TGlzdFtqXVswXSA9IGcyO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYjtcbn1cblxuZXhwb3J0IHsgVG9vbGJveCB9O1xuIiwiY2xhc3MgUmVjdGFuZ2xlIHtcbiAgaGVpZ2h0OiBudW1iZXI7XG4gIHdpZHRoOiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbiAgeDogbnVtYmVyO1xuICBjb25zdHJ1Y3Rvcih4OiBudW1iZXIsIHk6IG51bWJlciwgd2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIpIHtcbiAgICB0aGlzLnggPSB4O1xuICAgIHRoaXMueSA9IHk7XG4gICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICB9XG59XG5jbGFzcyBWZWN0b3Ige1xuICB5OiBudW1iZXI7XG4gIHg6IG51bWJlcjtcbiAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIpIHtcbiAgICB0aGlzLnggPSB4O1xuICAgIHRoaXMueSA9IHk7XG4gIH1cbn1cbmV4cG9ydCB7UmVjdGFuZ2xlLCBWZWN0b3J9O1xuIiwiaW1wb3J0IHsgQmxvY2tTVkcgfSBmcm9tIFwiLi9ibG9ja1NWR1wiO1xuaW1wb3J0IHsgVmVjdG9yIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmltcG9ydCB7IExpbmsgfSBmcm9tIFwiLi9saW5rXCI7XG5cbmNsYXNzIENvbm5lY3Rpb24ge1xuICBwcml2YXRlIF9ibG9jazogQmxvY2tTVkc7XG4gIHByaXZhdGUgX2FuY2hvcjogVmVjdG9yO1xuICBwcml2YXRlIF9wYXJ0bmVyOiBDb25uZWN0aW9uID0gdW5kZWZpbmVkO1xuICBwcml2YXRlIGNvbm5lY3RMaXN0ZW5lcnM6IEFycmF5PChtZTogQ29ubmVjdGlvbiwgb3RoZXI6IENvbm5lY3Rpb24pID0+IHZvaWQ+ID0gW107XG4gIHByaXZhdGUgZGlzY29ubmVjdExpc3RlbmVyczogQXJyYXk8KG1lOiBDb25uZWN0aW9uLCBvdGhlcjogQ29ubmVjdGlvbikgPT4gdm9pZD4gPSBbXTtcbiAgY29uc3RydWN0b3IoYmxvY2s6IEJsb2NrU1ZHLCBhbmNob3I6IFZlY3Rvcikge1xuICAgIFt0aGlzLl9ibG9jaywgdGhpcy5fYW5jaG9yXSA9IFtibG9jaywgYW5jaG9yXTtcbiAgfVxuICBwcml2YXRlIGhhbmRsZURpc2Nvbm5lY3QoKTogdm9pZCB7XG4gICAgZm9yICh2YXIgaSBvZiB0aGlzLmRpc2Nvbm5lY3RMaXN0ZW5lcnMpIHtcbiAgICAgIGkodGhpcywgdGhpcy5fcGFydG5lcik7XG4gICAgfVxuICAgIHRoaXMuX3BhcnRuZXIgPSB1bmRlZmluZWQ7XG4gIH1cbiAgYWRkRXZlbnRMaXN0ZW5lcih0eXBlOiBcImNvbm5lY3RcIiB8IFwiZGlzY29ubmVjdFwiLCBoYW5kbGVyOiAobWU6IENvbm5lY3Rpb24sIG90aGVyOiBDb25uZWN0aW9uKSA9PiB2b2lkKTogdm9pZCB7XG4gICAgaWYgKHR5cGUgPT0gXCJkaXNjb25uZWN0XCIpIHtcbiAgICAgIHRoaXMuZGlzY29ubmVjdExpc3RlbmVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PSBcImNvbm5lY3RcIikge1xuICAgICAgdGhpcy5jb25uZWN0TGlzdGVuZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfVxuICB9XG4gIHByaXZhdGUgaGFuZGxlQ29ubmVjdChvdGhlcjogQ29ubmVjdGlvbik6IHZvaWQge1xuICAgIHRoaXMuX3BhcnRuZXIgPSBvdGhlcjtcbiAgICBmb3IgKHZhciBpIG9mIHRoaXMuY29ubmVjdExpc3RlbmVycykge1xuICAgICAgaSh0aGlzLCB0aGlzLl9wYXJ0bmVyKTtcbiAgICB9XG4gIH1cbiAgZ2V0IGJsb2NrKCk6IEJsb2NrU1ZHIHtcbiAgICByZXR1cm4gdGhpcy5fYmxvY2s7XG4gIH1cbiAgZ2V0IG90aGVyQmxvY2soKTogQmxvY2tTVkcge1xuICAgIHJldHVybiB0aGlzLl9wYXJ0bmVyID8gdGhpcy5fcGFydG5lci5ibG9jayA6IHVuZGVmaW5lZDtcbiAgfVxuICBnZXQgcGFydG5lcigpOiBDb25uZWN0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5fcGFydG5lcjtcbiAgfVxuICBzZXQgcGFydG5lcihvdGhlcjogQ29ubmVjdGlvbikge1xuICAgIGlmICh0aGlzLl9wYXJ0bmVyICE9IG90aGVyKSB7XG4gICAgICBpZiAodGhpcy5fcGFydG5lcikge1xuICAgICAgICB0aGlzLmhhbmRsZURpc2Nvbm5lY3QoKTtcbiAgICAgICAgdGhpcy5fcGFydG5lci5oYW5kbGVEaXNjb25uZWN0KCk7XG4gICAgICB9XG4gICAgICBpZiAob3RoZXIpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVDb25uZWN0KG90aGVyKTtcbiAgICAgICAgb3RoZXIuaGFuZGxlQ29ubmVjdCh0aGlzKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZ2V0IGFuY2hvcigpOiBWZWN0b3Ige1xuICAgIHJldHVybiB0aGlzLl9hbmNob3I7XG4gIH1cbiAgc2V0IGFuY2hvcih2YWx1ZTogVmVjdG9yKSB7XG4gICAgdGhpcy5fYW5jaG9yID0gdmFsdWU7XG4gIH1cbn1cbmV4cG9ydCB7IENvbm5lY3Rpb24gfTtcbiIsImltcG9ydCB7IEJsb2NrUmVuZGVyZXIgfSBmcm9tIFwiLi4vYmxvY2tSZW5kZXJlclwiO1xuaW1wb3J0IHsgQmxvY2tTVkcgfSBmcm9tIFwiLi4vYmxvY2tTVkdcIjtcbmltcG9ydCB7IElucHV0U3RhY2sgfSBmcm9tIFwiLi4vc3RhY2tJbnB1dFwiO1xuY29uc3QgZGVmYXVsdFJlbmRlclZhbHVlcyA9IHtcclxuICB0YWJXaWR0aDogMTIsXG4gIHRhYkhlaWdodDogNixcbiAgdGFiT2Zmc2V0OiAxMixcbiAgdG9wUGFkZGluZzogOCxcbiAgYm90dG9tUGFkZGluZzogOCxcbiAgbGVmdFBhZGRpbmc6IDQsXG4gIHJpZ2h0UGFkZGluZzogNCxcbiAgcm93TWFyZ2luOiAxNixcbiAgaW5wdXRNYXJnaW46IDQsXG4gIG1pbldpZHRoOiAzNixcbiAgbWluUm93SGVpZ2h0OiAxOCxcbn07XG5jbGFzcyBEZWZhdWx0QmxvY2tSZW5kZXJlciBpbXBsZW1lbnRzIEJsb2NrUmVuZGVyZXIge1xuICByZW5kZXJCbG9jayhibG9jazogQmxvY2tTVkcpOiB2b2lkIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJNZXRob2Qgbm90IGltcGxlbWVudGVkLlwiKTtcbiAgfVxuICBwYXRoKGhpbnQ6IGFueSk6IHN0cmluZyB7XG4gICAgdmFyIG0gPSBcIk0gMCwwXCI7XG4gICAgaWYgKGhpbnQucHJldmlvdXMpIHtcbiAgICAgIG0gPSBtICsgXCJsIFwiICsgKGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiT2Zmc2V0KSArIFwiLDBcIjtcbiAgICAgIG0gPSBtICsgXCJsIFwiICsgKGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0ICogMCkgKyBcIixcIiArIChkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYkhlaWdodCk7XG4gICAgICBtID0gbSArIFwibCBcIiArIChkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYldpZHRoIC0gZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQgKiAyICogMCkgKyBcIixcIiArICgwKTtcbiAgICAgIG0gPSBtICsgXCJsIFwiICsgKGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0ICogMCkgKyBcIixcIiArICgtZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQpO1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAoaGludC53aWR0aHNbMF0gLSAwIC0gZGVmYXVsdFJlbmRlclZhbHVlcy50YWJXaWR0aCAtIGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiT2Zmc2V0KSArIFwiLDBcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAoaGludC53aWR0aHNbMF0gLSAwKSArIFwiLDBcIjtcbiAgICB9XG4gICAgbSA9IG0gKyBcImwgXCIgKyAwICsgXCIsXCIgKyAoaGludC5oZWlnaHRzWzBdICsgKGhpbnQud2lkdGhzLmxlbmd0aCA8IDIgPyBkZWZhdWx0UmVuZGVyVmFsdWVzLnRvcFBhZGRpbmcgKyBkZWZhdWx0UmVuZGVyVmFsdWVzLmJvdHRvbVBhZGRpbmcgOiBkZWZhdWx0UmVuZGVyVmFsdWVzLnJvd01hcmdpbikgLSAwKTtcbiAgICB2YXIgcHJlV2lkdGggPSBoaW50LndpZHRoc1swXTtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGhpbnQud2lkdGhzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgbmV3V2lkdGggPSBoaW50LndpZHRoc1tpXTtcbiAgICAgIHZhciBuZXh0V2lkdGggPSBpIDwgaGludC53aWR0aHMubGVuZ3RoIC0gMSA/IGhpbnQud2lkdGhzW2kgKyAxXSA6IDA7XG4gICAgICB2YXIgd0RpZmYgPSBuZXdXaWR0aCAtIHByZVdpZHRoO1xuICAgICAgdmFyIHdEaWZmMiA9IG5leHRXaWR0aCAtIG5ld1dpZHRoO1xuICAgICAgaWYgKHdEaWZmID4gMCkge1xuXG4gICAgICAgIC8vbSA9IG0gKyBcImwgXCIgKyAoKHdEaWZmIC0gdGhpcy5yYWRpdXMgKiAyKSkgKyBcIiwwXCI7XG4gICAgICAgIGlmIChoaW50LmRhdGFbaSAtIDFdLm5leHQpIHtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArIChkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYk9mZnNldCkgKyBcIiwwXCI7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAoZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQgKiAwKSArIFwiLFwiICsgKGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0KTtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArIChkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYldpZHRoIC0gZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQgKiAyICogMCkgKyBcIixcIiArICgwKTtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArIChkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYkhlaWdodCAqIDApICsgXCIsXCIgKyAoLWRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0KTtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArICh3RGlmZiAtIDAgLSBkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYldpZHRoIC0gZGVmYXVsdFJlbmRlclZhbHVlcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKCh3RGlmZiAtIDApKSArIFwiLDBcIjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh3RGlmZiA8IDApIHtcblxuICAgICAgICAvL20gPSBtICsgXCJsIFwiICsgKCh3RGlmZiArIHRoaXMucmFkaXVzICogMikpICsgXCIsMFwiO1xuICAgICAgICBpZiAoaGludC5kYXRhW2kgLSAxXS5uZXh0KSB7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLSgtd0RpZmYgKyAwIC0gZGVmYXVsdFJlbmRlclZhbHVlcy50YWJXaWR0aCAtIGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiT2Zmc2V0KSkgKyBcIiwwXCI7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAoZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQgKiAwKSArIFwiLFwiICsgKGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0KTtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArICgtZGVmYXVsdFJlbmRlclZhbHVlcy50YWJXaWR0aCArIGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0ICogMiAqIDApICsgXCIsXCIgKyAoMCk7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAoZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQgKiAwKSArIFwiLFwiICsgKC1kZWZhdWx0UmVuZGVyVmFsdWVzLnRhYkhlaWdodCk7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLWRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiT2Zmc2V0KSArIFwiLDBcIjtcblxuXG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArICgod0RpZmYgKyAwKSkgKyBcIiwwXCI7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgaWYgKGhpbnQuZGF0YVtpIC0gMV0ubmV4dCkge1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiT2Zmc2V0KSArIFwiLDBcIjtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArIChkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYkhlaWdodCAqIDApICsgXCIsXCIgKyAoZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQpO1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiV2lkdGggLSBkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYkhlaWdodCAqIDIgKiAwKSArIFwiLFwiICsgKDApO1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0ICogMCkgKyBcIixcIiArICgtZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQpO1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKHdEaWZmIC0gZGVmYXVsdFJlbmRlclZhbHVlcy50YWJXaWR0aCAtIGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiT2Zmc2V0KSArIFwiLDBcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArICgod0RpZmYpKSArIFwiLDBcIjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHdEaWZmIDwgMCkge1xuICAgICAgICAvL20gPSBtICsgXCJhXCIgKyB0aGlzLnJhZGl1cyArIFwiLFwiICsgdGhpcy5yYWRpdXMgKyBcIiwwLDAsMCxcIiArICgtdGhpcy5yYWRpdXMpICsgXCIsXCIgKyAodGhpcy5yYWRpdXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gIG0gPSBtICsgXCJhXCIgKyB0aGlzLnJhZGl1cyArIFwiLFwiICsgdGhpcy5yYWRpdXMgKyBcIiwwLDAsMSxcIiArIHRoaXMucmFkaXVzICsgXCIsXCIgKyB0aGlzLnJhZGl1cztcbiAgICAgIH1cbiAgICAgIG0gPSBtICsgXCJsIFwiICsgMCArIFwiLFwiICsgKGhpbnQuaGVpZ2h0c1tpXSArIGRlZmF1bHRSZW5kZXJWYWx1ZXMucm93TWFyZ2luIC0gMCk7XG4gICAgICBwcmVXaWR0aCA9IG5ld1dpZHRoICsgMDtcbiAgICB9XG4gICAgLy9tPW0rXCJIIDBcIjtcbiAgICB2YXIgbGFzdFcgPSBoaW50LndpZHRoc1toaW50LndpZHRocy5sZW5ndGggLSAxXTtcbiAgICAvL20gPSBtICsgXCJhXCIgKyB0aGlzLnJhZGl1cyArIFwiLFwiICsgdGhpcy5yYWRpdXMgKyBcIiwwLDAsMSxcIiArICgtdGhpcy5yYWRpdXMpICsgXCIsXCIgKyB0aGlzLnJhZGl1cztcblxuICAgIGlmIChoaW50Lm5leHQpIHtcbiAgICAgIG0gPSBtICsgXCJsIFwiICsgKC1sYXN0VyArIDAgKyBkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYldpZHRoICsgZGVmYXVsdFJlbmRlclZhbHVlcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLWRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0ICogMCkgKyBcIixcIiArIChkZWZhdWx0UmVuZGVyVmFsdWVzLnRhYkhlaWdodCk7XG4gICAgICBtID0gbSArIFwibCBcIiArICgtZGVmYXVsdFJlbmRlclZhbHVlcy50YWJXaWR0aCArIGRlZmF1bHRSZW5kZXJWYWx1ZXMudGFiSGVpZ2h0ICogMiAqIDApICsgXCIsXCIgKyAoMCk7XG4gICAgICBtID0gbSArIFwibCBcIiArICgtZGVmYXVsdFJlbmRlclZhbHVlcy50YWJIZWlnaHQgKiAwKSArIFwiLFwiICsgKC1kZWZhdWx0UmVuZGVyVmFsdWVzLnRhYkhlaWdodCk7XG4gICAgICBtID0gbSArIFwibCBcIiArICgtZGVmYXVsdFJlbmRlclZhbHVlcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gbSArIFwibCBcIiArICgtbGFzdFcgKyAwKSArIFwiLFwiICsgMDtcbiAgICB9XG4gICAgLy9tID0gbSArIFwiYVwiICsgdGhpcy5yYWRpdXMgKyBcIixcIiArIHRoaXMucmFkaXVzICsgXCIsMCwwLDEsXCIgKyAoLXRoaXMucmFkaXVzKSArIFwiLFwiICsgKC10aGlzLnJhZGl1cyk7XG4gICAgbSA9IG0gKyBcImwgXCIgKyAwICsgXCIsXCIgKyAoLWhpbnQudEhlaWdodCArIDApO1xuICAgIC8vICBtID0gbSArIFwiYVwiICsgdGhpcy5yYWRpdXMgKyBcIixcIiArIHRoaXMucmFkaXVzICsgXCIsMCwwLDEsXCIgKyAodGhpcy5yYWRpdXMpICsgXCIsXCIgKyAoLXRoaXMucmFkaXVzKTtcbiAgICByZXR1cm4gbTtcbiAgfVxuXG4gIHJlbmRlckhpbnQoYmxvY2s6IEJsb2NrU1ZHKSB7XG4gICAgdmFyIGN5ID0gZGVmYXVsdFJlbmRlclZhbHVlcy50b3BQYWRkaW5nO1xuICAgIHZhciBtYXhXaWR0aCA9IDA7XG4gICAgdmFyIGhlaWdodHM6IG51bWJlcltdID0gW107XG4gICAgdmFyIHdpZHRoczogbnVtYmVyW10gPSBbXTtcbiAgICB2YXIgZGF0YTogeyBwcmV2OiBib29sZWFuOyBuZXh0OiBib29sZWFuOyB9W10gPSBbXTtcbiAgICB2YXIgc3RhY2sgPSBmYWxzZTtcbiAgICB2YXIgblN0YWNrID0gZmFsc2U7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBibG9jay5pbnB1dExpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciByb3cgPSBibG9jay5pbnB1dExpc3RbaV07XG4gICAgICB2YXIgbG93WCA9IGRlZmF1bHRSZW5kZXJWYWx1ZXMubWluV2lkdGg7XG4gICAgICBpZiAoc3RhY2spIHtcbiAgICAgICAgbG93WCA9IDEyODtcbiAgICAgIH1cbiAgICAgIGRhdGFbaV0gPSB7IHByZXY6IHN0YWNrICYmIHRydWUgJiYgblN0YWNrLCBuZXh0OiBmYWxzZSB9O1xuICAgICAgdmFyIGN4ID0gZGVmYXVsdFJlbmRlclZhbHVlcy5sZWZ0UGFkZGluZztcbiAgICAgIHZhciBtaW5IZWlnaHQgPSBkZWZhdWx0UmVuZGVyVmFsdWVzLm1pblJvd0hlaWdodDtcbiAgICAgIHZhciBoZWlnaHQgPSBtaW5IZWlnaHQgKyAwO1xuICAgICAgc3RhY2sgPSBmYWxzZTtcbiAgICAgIG5TdGFjayA9IGZhbHNlO1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCByb3cubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgaWYgKHJvd1tqXS50eXBlID09IFwiSW5wdXRTdGFja1wiKSB7XG4gICAgICAgICAgbG93WCA9IDQ4O1xuICAgICAgICAgIGN4ID0gTWF0aC5tYXgoY3gsIGxvd1gpO1xuICAgICAgICAgIHJvd1tqXS5yZW5kZXIoYmxvY2suZ3JvdXApO1xuICAgICAgICAgIHZhciBiYiA9IHJvd1tqXS5ncm91cC5nZXRCQm94KCk7XG4gICAgICAgICAgYmIuaGVpZ2h0ID0gcm93W2pdLmhlaWdodCgpO1xuICAgICAgICAgIHJvd1tqXS5wb3NpdGlvbi54ID0gY3g7XG4gICAgICAgICAgcm93W2pdLnBvc2l0aW9uLnkgPSBjeSAtIGRlZmF1bHRSZW5kZXJWYWx1ZXMucm93TWFyZ2luIC8gMjtcbiAgICAgICAgICByb3dbal0ucmVuZGVyKGJsb2NrLmdyb3VwKTtcbiAgICAgICAgICAvL2N4ICs9IGJiLndpZHRoICsgMTA7XG4gICAgICAgICAgaGVpZ2h0ID0gTWF0aC5tYXgoaGVpZ2h0LCBiYi5oZWlnaHQgLSBkZWZhdWx0UmVuZGVyVmFsdWVzLnJvd01hcmdpbik7XG4gICAgICAgICAgc3RhY2sgPSB0cnVlO1xuXG4gICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICB3aWR0aHNbaSAtIDFdID0gTWF0aC5tYXgod2lkdGhzW2kgLSAxXSwgMTI4KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGkgPT09IGJsb2NrLmlucHV0TGlzdC5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICB3aWR0aHNbaSAtIDFdID0gTWF0aC5tYXgod2lkdGhzW2kgLSAxXSwgMTI4KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCEoKHJvd1tqXSBhcyBJbnB1dFN0YWNrKS5zdGFjaykgfHwgKChyb3dbal0gYXMgSW5wdXRTdGFjaykuc3RhY2sgYXMgQmxvY2tTVkcpLmxhc3RCbG9jaygpLm5leHRDb25uZWN0aW9uKSB7XG4gICAgICAgICAgICBuU3RhY2sgPSB0cnVlO1xuICAgICAgICAgICAgZGF0YVtpXS5uZXh0ID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZGF0YVtpIC0gMV0ubmV4dCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcm93W2pdLnBvc2l0aW9uLnggPSBjeDtcbiAgICAgICAgICByb3dbal0ucG9zaXRpb24ueSA9IGN5O1xuICAgICAgICAgIHJvd1tqXS5yZW5kZXIoYmxvY2suZ3JvdXApO1xuICAgICAgICAgIHZhciBiYiA9IHJvd1tqXS5ncm91cC5nZXRCQm94KCk7XG4gICAgICAgICAgYmIuaGVpZ2h0ID0gcm93W2pdLmhlaWdodCgpO1xuICAgICAgICAgIGN4ICs9IGJiLndpZHRoICsgZGVmYXVsdFJlbmRlclZhbHVlcy5pbnB1dE1hcmdpbjtcbiAgICAgICAgICBoZWlnaHQgPSBNYXRoLm1heChoZWlnaHQsIGJiLmhlaWdodCk7XG4gICAgICAgIH1cbiAgICAgICAgLy9yb3dbal0ucmVuZGVyKHRoaXMuZ3JvdXApO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCByb3cubGVuZ3RoOyBqKyspIHtcblxuICAgICAgICBpZiAocm93W2pdLnR5cGUgIT0gXCJJbnB1dFN0YWNrXCIpIHtcbiAgICAgICAgICByb3dbal0ucG9zaXRpb24ueSA9IGN5IC0gcm93W2pdLmhlaWdodCgpIC8gMiArIGhlaWdodCAvIDI7XG4gICAgICAgICAgcm93W2pdLnJlbmRlcihibG9jay5ncm91cCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaGVpZ2h0cy5wdXNoKGhlaWdodCk7XG4gICAgICB3aWR0aHMucHVzaChNYXRoLm1heChjeCAtIGRlZmF1bHRSZW5kZXJWYWx1ZXMuaW5wdXRNYXJnaW4gKyBkZWZhdWx0UmVuZGVyVmFsdWVzLnJpZ2h0UGFkZGluZywgbG93WCkpO1xuICAgICAgbWF4V2lkdGggPSBNYXRoLm1heChtYXhXaWR0aCwgd2lkdGhzW3dpZHRocy5sZW5ndGggLSAxXSk7XG4gICAgICBjeSArPSBoZWlnaHQgKyBkZWZhdWx0UmVuZGVyVmFsdWVzLnJvd01hcmdpbjtcbiAgICAgIGlmIChpID09PSBibG9jay5pbnB1dExpc3QubGVuZ3RoIC0gMSAmJiBzdGFjaykge1xuICAgICAgICB3aWR0aHNbaSArIDFdID0gMTI4O1xuICAgICAgICBoZWlnaHRzW2kgKyAxXSA9IDQ7XG4gICAgICAgIGN5ICs9IGhlaWdodHNbaSArIDFdICsgZGVmYXVsdFJlbmRlclZhbHVlcy5yb3dNYXJnaW47XG4gICAgICAgIGRhdGFbaSArIDFdID0geyBwcmV2OiBuU3RhY2ssIG5leHQ6IGZhbHNlIH07XG4gICAgICB9XG5cbiAgICB9XG5cbiAgICByZXR1cm4geyBwcmV2aW91czogYmxvY2suY2FuSGF2ZVByZXZpb3VzLCBuZXh0OiBibG9jay5jYW5IYXZlTmV4dCwgb3V0OiBibG9jay5jYW5IYXZlT3V0cHV0LCBoZWlnaHRzOiBoZWlnaHRzLCB0SGVpZ2h0OiBjeSAtIGRlZmF1bHRSZW5kZXJWYWx1ZXMucm93TWFyZ2luICsgZGVmYXVsdFJlbmRlclZhbHVlcy5ib3R0b21QYWRkaW5nLCB3aWR0aHM6IHdpZHRocywgbVdpZHRoOiBtYXhXaWR0aCwgZGF0YTogZGF0YSB9O1xuICB9XG4gIGNvbXBhcmVIaW50cyhoaW50MTogYW55LCBoaW50MjogYW55KTogYm9vbGVhbiB7XG4gICAgLy91bmRlZmluZWQgaGludHMgYXJlIGFsd2F5cyBkaWZmZXJlbnRcbiAgICBpZiAoIWhpbnQxIHx8ICFoaW50Mikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoIWhpbnQxLmhlaWdodHMgfHwgIWhpbnQyLmhlaWdodHMpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCFoaW50MS5oZWlnaHRzIHx8ICFoaW50Mi5oZWlnaHRzKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHNob3VsZFJlbmRlcihibG9jazogQmxvY2tTVkcpOiBib29sZWFuIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJNZXRob2Qgbm90IGltcGxlbWVudGVkLlwiKTtcbiAgfVxufVxuZXhwb3J0IHsgRGVmYXVsdEJsb2NrUmVuZGVyZXIsIGRlZmF1bHRSZW5kZXJWYWx1ZXMgfTtcbiIsImltcG9ydCB7IFJlbmRlcmFibGUgfSBmcm9tIFwiLi9yZW5kZXJhYmxlXCI7XG5pbXBvcnQgeyBSZWN0YW5nbGUsIFZlY3RvciB9IGZyb20gXCIuL3V0aWxzXCI7XG5pbXBvcnQgeyBJbnB1dFNWRyB9IGZyb20gXCIuL2lucHV0XCI7XG5pbXBvcnQgeyBJbnB1dFN0YWNrIH0gZnJvbSBcIi4vc3RhY2tJbnB1dFwiO1xuaW1wb3J0IHsgQ29ubmVjdGlvbiB9IGZyb20gXCIuL2Nvbm5lY3Rpb25cIjtcbmltcG9ydCB7IERlZmF1bHRCbG9ja1JlbmRlcmVyIH0gZnJvbSBcIi4vZGVmYXVsdHMvRGVmYXVsdEJsb2NrUmVuZGVyZXJcIjtcbmludGVyZmFjZSBCbG9ja1NoYXBlIHtcbiAgcGF0aCgpOiBzdHJpbmc7XG59XG5jbGFzcyBTcXVhcmVCbG9ja1NoYXBlIGltcGxlbWVudHMgQmxvY2tTaGFwZSB7XG4gIGxheW91dDogeyBoZWlnaHRzOiBBcnJheTxudW1iZXI+LCB3aWR0aHM6IEFycmF5PG51bWJlcj4sIHRIZWlnaHQ6IG51bWJlciwgbVdpZHRoOiBudW1iZXIsIGRhdGE6IEFycmF5PHsgcHJldjogYm9vbGVhbiwgbmV4dDogYm9vbGVhbiB9PiB9O1xuICByYWRpdXM6IG51bWJlcjtcbiAgdGFiSGVpZ2h0OiBudW1iZXIgPSA2O1xuICB0YWJXaWR0aDogbnVtYmVyID0gMTI7XG4gIHRhYk9mZnNldDogbnVtYmVyID0gMTI7XG4gIG5leHQ6IGJvb2xlYW47XG4gIHByZXZpb3VzOiBib29sZWFuO1xuICByZXBvcnRlcjogYm9vbGVhbiA9IGZhbHNlO1xuICBwYXRoKCk6IHN0cmluZyB7XG4gICAgdmFyIG0gPSBcIk0gXCIgKyB0aGlzLnJhZGl1cyArIFwiLDBcIjtcbiAgICBpZiAodGhpcy5wcmV2aW91cykge1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJIZWlnaHQgKiAwKSArIFwiLFwiICsgKHRoaXMudGFiSGVpZ2h0KTtcbiAgICAgIG0gPSBtICsgXCJsIFwiICsgKHRoaXMudGFiV2lkdGggLSB0aGlzLnRhYkhlaWdodCAqIDIgKiAwKSArIFwiLFwiICsgKDApO1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJIZWlnaHQgKiAwKSArIFwiLFwiICsgKC10aGlzLnRhYkhlaWdodCk7XG4gICAgICBtID0gbSArIFwibCBcIiArICh0aGlzLmxheW91dC53aWR0aHNbMF0gLSB0aGlzLnJhZGl1cyAqIDIgLSB0aGlzLnRhYldpZHRoIC0gdGhpcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gbSArIFwibCBcIiArICh0aGlzLmxheW91dC53aWR0aHNbMF0gLSB0aGlzLnJhZGl1cyAqIDIpICsgXCIsMFwiO1xuICAgIH1cbiAgICBtID0gbSArIFwiYVwiICsgdGhpcy5yYWRpdXMgKyBcIixcIiArIHRoaXMucmFkaXVzICsgXCIsMCwwLDEsXCIgKyB0aGlzLnJhZGl1cyArIFwiLFwiICsgdGhpcy5yYWRpdXM7XG4gICAgbSA9IG0gKyBcImwgXCIgKyAwICsgXCIsXCIgKyAodGhpcy5sYXlvdXQuaGVpZ2h0c1swXSArIDIwIC0gdGhpcy5yYWRpdXMgKiAyKTtcbiAgICB2YXIgcHJlV2lkdGggPSB0aGlzLmxheW91dC53aWR0aHNbMF07XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCB0aGlzLmxheW91dC53aWR0aHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBuZXdXaWR0aCA9IHRoaXMubGF5b3V0LndpZHRoc1tpXTtcbiAgICAgIHZhciBuZXh0V2lkdGggPSBpIDwgdGhpcy5sYXlvdXQud2lkdGhzLmxlbmd0aCAtIDEgPyB0aGlzLmxheW91dC53aWR0aHNbaSArIDFdIDogMDtcbiAgICAgIHZhciB3RGlmZiA9IG5ld1dpZHRoIC0gcHJlV2lkdGg7XG4gICAgICB2YXIgd0RpZmYyID0gbmV4dFdpZHRoIC0gbmV3V2lkdGg7XG4gICAgICBpZiAod0RpZmYgPiB0aGlzLnJhZGl1cyAqIDIpIHtcbiAgICAgICAgbSA9IG0gKyBcImFcIiArIHRoaXMucmFkaXVzICsgXCIsXCIgKyB0aGlzLnJhZGl1cyArIFwiLDAsMCwwLFwiICsgKHRoaXMucmFkaXVzKSArIFwiLFwiICsgdGhpcy5yYWRpdXM7XG4gICAgICAgIC8vbSA9IG0gKyBcImwgXCIgKyAoKHdEaWZmIC0gdGhpcy5yYWRpdXMgKiAyKSkgKyBcIiwwXCI7XG4gICAgICAgIGlmICh0aGlzLmxheW91dC5kYXRhW2kgLSAxXS5uZXh0KSB7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKHRoaXMudGFiSGVpZ2h0ICogMCkgKyBcIixcIiArICh0aGlzLnRhYkhlaWdodCk7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJXaWR0aCAtIHRoaXMudGFiSGVpZ2h0ICogMiAqIDApICsgXCIsXCIgKyAoMCk7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJIZWlnaHQgKiAwKSArIFwiLFwiICsgKC10aGlzLnRhYkhlaWdodCk7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAod0RpZmYgLSB0aGlzLnJhZGl1cyAqIDIgLSB0aGlzLnRhYldpZHRoIC0gdGhpcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKCh3RGlmZiAtIHRoaXMucmFkaXVzICogMikpICsgXCIsMFwiO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHdEaWZmIDwgLXRoaXMucmFkaXVzICogMikge1xuICAgICAgICBtID0gbSArIFwiYVwiICsgdGhpcy5yYWRpdXMgKyBcIixcIiArIHRoaXMucmFkaXVzICsgXCIsMCwwLDEsXCIgKyAoLXRoaXMucmFkaXVzKSArIFwiLFwiICsgdGhpcy5yYWRpdXM7XG4gICAgICAgIC8vbSA9IG0gKyBcImwgXCIgKyAoKHdEaWZmICsgdGhpcy5yYWRpdXMgKiAyKSkgKyBcIiwwXCI7XG4gICAgICAgIGlmICh0aGlzLmxheW91dC5kYXRhW2kgLSAxXS5uZXh0KSB7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLSgtd0RpZmYgKyB0aGlzLnJhZGl1cyAqIDIgLSB0aGlzLnRhYldpZHRoIC0gdGhpcy50YWJPZmZzZXQpKSArIFwiLDBcIjtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArICh0aGlzLnRhYkhlaWdodCAqIDApICsgXCIsXCIgKyAodGhpcy50YWJIZWlnaHQpO1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKC10aGlzLnRhYldpZHRoICsgdGhpcy50YWJIZWlnaHQgKiAyICogMCkgKyBcIixcIiArICgwKTtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArICh0aGlzLnRhYkhlaWdodCAqIDApICsgXCIsXCIgKyAoLXRoaXMudGFiSGVpZ2h0KTtcbiAgICAgICAgICBtID0gbSArIFwibCBcIiArICgtdGhpcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuXG5cblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKCh3RGlmZiArIHRoaXMucmFkaXVzICogMikpICsgXCIsMFwiO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtID0gbSArIFwiYVwiICsgdGhpcy5yYWRpdXMgKyBcIixcIiArIHRoaXMucmFkaXVzICsgXCIsMCwwLDEsXCIgKyAoLXRoaXMucmFkaXVzKSArIFwiLFwiICsgdGhpcy5yYWRpdXM7XG4gICAgICAgIGlmICh0aGlzLmxheW91dC5kYXRhW2kgLSAxXS5uZXh0KSB7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKHRoaXMudGFiSGVpZ2h0ICogMCkgKyBcIixcIiArICh0aGlzLnRhYkhlaWdodCk7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJXaWR0aCAtIHRoaXMudGFiSGVpZ2h0ICogMiAqIDApICsgXCIsXCIgKyAoMCk7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAodGhpcy50YWJIZWlnaHQgKiAwKSArIFwiLFwiICsgKC10aGlzLnRhYkhlaWdodCk7XG4gICAgICAgICAgbSA9IG0gKyBcImwgXCIgKyAod0RpZmYgLSB0aGlzLnRhYldpZHRoIC0gdGhpcy50YWJPZmZzZXQpICsgXCIsMFwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG0gPSBtICsgXCJsIFwiICsgKCh3RGlmZikpICsgXCIsMFwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAod0RpZmYgPCAtdGhpcy5yYWRpdXMgKiAyKSB7XG4gICAgICAgIG0gPSBtICsgXCJhXCIgKyB0aGlzLnJhZGl1cyArIFwiLFwiICsgdGhpcy5yYWRpdXMgKyBcIiwwLDAsMCxcIiArICgtdGhpcy5yYWRpdXMpICsgXCIsXCIgKyAodGhpcy5yYWRpdXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbSA9IG0gKyBcImFcIiArIHRoaXMucmFkaXVzICsgXCIsXCIgKyB0aGlzLnJhZGl1cyArIFwiLDAsMCwxLFwiICsgdGhpcy5yYWRpdXMgKyBcIixcIiArIHRoaXMucmFkaXVzO1xuICAgICAgfVxuICAgICAgbSA9IG0gKyBcImwgXCIgKyAwICsgXCIsXCIgKyAodGhpcy5sYXlvdXQuaGVpZ2h0c1tpXSArIDIwIC0gdGhpcy5yYWRpdXMgKiAyKTtcbiAgICAgIHByZVdpZHRoID0gbmV3V2lkdGggKyAwO1xuICAgIH1cbiAgICAvL209bStcIkggMFwiO1xuICAgIHZhciBsYXN0VyA9IHRoaXMubGF5b3V0LndpZHRoc1t0aGlzLmxheW91dC53aWR0aHMubGVuZ3RoIC0gMV07XG4gICAgbSA9IG0gKyBcImFcIiArIHRoaXMucmFkaXVzICsgXCIsXCIgKyB0aGlzLnJhZGl1cyArIFwiLDAsMCwxLFwiICsgKC10aGlzLnJhZGl1cykgKyBcIixcIiArIHRoaXMucmFkaXVzO1xuXG4gICAgaWYgKHRoaXMubmV4dCkge1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLWxhc3RXICsgdGhpcy5yYWRpdXMgKiAyICsgdGhpcy50YWJXaWR0aCArIHRoaXMudGFiT2Zmc2V0KSArIFwiLDBcIjtcbiAgICAgIG0gPSBtICsgXCJsIFwiICsgKC10aGlzLnRhYkhlaWdodCAqIDApICsgXCIsXCIgKyAodGhpcy50YWJIZWlnaHQpO1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLXRoaXMudGFiV2lkdGggKyB0aGlzLnRhYkhlaWdodCAqIDIgKiAwKSArIFwiLFwiICsgKDApO1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLXRoaXMudGFiSGVpZ2h0ICogMCkgKyBcIixcIiArICgtdGhpcy50YWJIZWlnaHQpO1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLXRoaXMudGFiT2Zmc2V0KSArIFwiLDBcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IG0gKyBcImwgXCIgKyAoLWxhc3RXICsgdGhpcy5yYWRpdXMgKiAyKSArIFwiLFwiICsgMDtcbiAgICB9XG4gICAgbSA9IG0gKyBcImFcIiArIHRoaXMucmFkaXVzICsgXCIsXCIgKyB0aGlzLnJhZGl1cyArIFwiLDAsMCwxLFwiICsgKC10aGlzLnJhZGl1cykgKyBcIixcIiArICgtdGhpcy5yYWRpdXMpO1xuICAgIG0gPSBtICsgXCJsIFwiICsgMCArIFwiLFwiICsgKC10aGlzLmxheW91dC50SGVpZ2h0ICsgdGhpcy5yYWRpdXMgKiAyKTtcbiAgICBtID0gbSArIFwiYVwiICsgdGhpcy5yYWRpdXMgKyBcIixcIiArIHRoaXMucmFkaXVzICsgXCIsMCwwLDEsXCIgKyAodGhpcy5yYWRpdXMpICsgXCIsXCIgKyAoLXRoaXMucmFkaXVzKTtcbiAgICByZXR1cm4gbTtcbiAgfTtcbiAgY29uc3RydWN0b3IobGF5b3V0OiB7IGhlaWdodHM6IEFycmF5PG51bWJlcj4sIHdpZHRoczogQXJyYXk8bnVtYmVyPiwgdEhlaWdodDogbnVtYmVyLCBtV2lkdGg6IG51bWJlciwgZGF0YTogQXJyYXk8eyBwcmV2OiBib29sZWFuLCBuZXh0OiBib29sZWFuIH0+IH0sIHJhZGl1czogbnVtYmVyID0gMiwgbmV4dDogYm9vbGVhbiA9IHRydWUsIHByZXZpb3VzOiBib29sZWFuID0gdHJ1ZSkge1xuICAgIHRoaXMubGF5b3V0ID0gbGF5b3V0O1xuICAgIHRoaXMucmFkaXVzID0gcmFkaXVzO1xuICAgIHRoaXMubmV4dCA9IG5leHQ7XG4gICAgdGhpcy5wcmV2aW91cyA9IHByZXZpb3VzO1xuICB9O1xufVxuY2xhc3MgQmxvY2tTVkcgaW1wbGVtZW50cyBSZW5kZXJhYmxlIHtcbiAgZ3JvdXA6IFNWR0dFbGVtZW50O1xuICBiQm94OiBSZWN0YW5nbGU7XG4gIHNoYXBlOiBTVkdQYXRoRWxlbWVudDtcbiAgcmVuZGVySGludDogYW55ID0gdW5kZWZpbmVkO1xuICBwcmV2aW91c0Nvbm5lY3Rpb246IENvbm5lY3Rpb24gPSB1bmRlZmluZWQ7XG4gIG5leHRDb25uZWN0aW9uOiBDb25uZWN0aW9uID0gdW5kZWZpbmVkO1xuICBvdXRwdXRDb25uZWN0aW9uOiBDb25uZWN0aW9uID0gdW5kZWZpbmVkO1xuICBpbnB1dExpc3Q6IEFycmF5PEFycmF5PElucHV0U1ZHPj4gPSBbW11dO1xuICBwb3NpdGlvbjogVmVjdG9yID0gbmV3IFZlY3RvcigwLCAwKTtcbiAgY29sb3I6IHN0cmluZyA9IFwiaHNsKDAsIDcwJSwgNTAlKVwiO1xuICBnZXQgcHJldmlvdXMoKTogQmxvY2tTVkcge1xuICAgIHJldHVybiB0aGlzLnByZXZpb3VzQ29ubmVjdGlvbiA/IHRoaXMucHJldmlvdXNDb25uZWN0aW9uLm90aGVyQmxvY2sgOiB1bmRlZmluZWQ7XG4gIH1cbiAgZ2V0IGNhbkhhdmVOZXh0KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhKCF0aGlzLm5leHRDb25uZWN0aW9uKTtcbiAgfVxuICBzZXQgY2FuSGF2ZU5leHQobmV3VmFsOiBib29sZWFuKSB7XG4gICAgaWYgKHRoaXMuY2FuSGF2ZU5leHQgIT0gbmV3VmFsKSB7XG4gICAgICBpZiAobmV3VmFsKSB7XG4gICAgICAgIHRoaXMubmV4dENvbm5lY3Rpb24gPSBuZXcgQ29ubmVjdGlvbih0aGlzLCBuZXcgVmVjdG9yKDAsIDApKTtcbiAgICAgICAgdGhpcy5uZXh0Q29ubmVjdGlvbi5hZGRFdmVudExpc3RlbmVyKFwiZGlzY29ubmVjdFwiLCBmdW5jdGlvbihtZTogQ29ubmVjdGlvbiwgb3RoZXI6IENvbm5lY3Rpb24pIHtcbiAgICAgICAgICBpZiAob3RoZXIgJiYgb3RoZXIuYmxvY2spIHtcbiAgICAgICAgICAgIGlmIChvdGhlci5ibG9jay5ncm91cC5wYXJlbnROb2RlID09IHRoaXMuZ3JvdXApIHtcbiAgICAgICAgICAgICAgdGhpcy5ncm91cC5yZW1vdmVDaGlsZChvdGhlci5ibG9jay5ncm91cCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMubmV4dENvbm5lY3Rpb24ucGFydG5lciA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5uZXh0Q29ubmVjdGlvbiA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZ2V0IGNhbkhhdmVQcmV2aW91cygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gISghdGhpcy5wcmV2aW91c0Nvbm5lY3Rpb24pO1xuICB9XG4gIHNldCBjYW5IYXZlUHJldmlvdXMobmV3VmFsOiBib29sZWFuKSB7XG4gICAgaWYgKHRoaXMuY2FuSGF2ZVByZXZpb3VzICE9IG5ld1ZhbCkge1xuICAgICAgaWYgKG5ld1ZhbCkge1xuICAgICAgICB0aGlzLnByZXZpb3VzQ29ubmVjdGlvbiA9IG5ldyBDb25uZWN0aW9uKHRoaXMsIG5ldyBWZWN0b3IoMCwgMCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5wcmV2aW91c0Nvbm5lY3Rpb24ucGFydG5lciA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5wcmV2aW91c0Nvbm5lY3Rpb24gPSB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGdldCBjYW5IYXZlT3V0cHV0KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhKCF0aGlzLm91dHB1dENvbm5lY3Rpb24pO1xuICB9XG4gIHNldCBjYW5IYXZlT3V0cHV0KG5ld1ZhbDogYm9vbGVhbikge1xuICAgIGlmICh0aGlzLmNhbkhhdmVPdXRwdXQgIT0gbmV3VmFsKSB7XG4gICAgICBpZiAobmV3VmFsKSB7XG4gICAgICAgIHRoaXMub3V0cHV0Q29ubmVjdGlvbiA9IG5ldyBDb25uZWN0aW9uKHRoaXMsIG5ldyBWZWN0b3IoMCwgMCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vdXRwdXRDb25uZWN0aW9uLnBhcnRuZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMub3V0cHV0Q29ubmVjdGlvbiA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgc2V0IHByZXZpb3VzKGJsb2NrOiBCbG9ja1NWRykge1xuICAgIGlmICh0aGlzLnByZXZpb3VzQ29ubmVjdGlvbikge1xuICAgICAgdGhpcy5wcmV2aW91c0Nvbm5lY3Rpb24ucGFydG5lciA9IGJsb2NrLm5leHRDb25uZWN0aW9uO1xuICAgIH1cbiAgfVxuICBnZXQgbmV4dCgpOiBCbG9ja1NWRyB7XG4gICAgcmV0dXJuIHRoaXMubmV4dENvbm5lY3Rpb24gPyB0aGlzLm5leHRDb25uZWN0aW9uLm90aGVyQmxvY2sgOiB1bmRlZmluZWQ7XG4gIH1cbiAgc2V0IG5leHQoYmxvY2s6IEJsb2NrU1ZHKSB7XG4gICAgaWYgKHRoaXMubmV4dENvbm5lY3Rpb24pIHtcbiAgICAgIHRoaXMubmV4dENvbm5lY3Rpb24ucGFydG5lciA9IGJsb2NrLnByZXZpb3VzQ29ubmVjdGlvbjtcbiAgICB9XG4gIH1cbiAgdG9Db2RlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwidW5kZWZpbmVkXCI7XG4gIH1cbiAgbGFzdEJsb2NrKCk6IEJsb2NrU1ZHIHtcbiAgICBpZiAodGhpcy5uZXh0KSB7XG4gICAgICByZXR1cm4gdGhpcy5uZXh0Lmxhc3RCbG9jaygpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBsYXlvdXRDaGlsZHJlbigpOiB7IGhlaWdodHM6IEFycmF5PG51bWJlcj4sIHdpZHRoczogQXJyYXk8bnVtYmVyPiwgdEhlaWdodDogbnVtYmVyLCBtV2lkdGg6IG51bWJlciwgZGF0YTogQXJyYXk8eyBwcmV2OiBib29sZWFuLCBuZXh0OiBib29sZWFuIH0+IH0ge1xuICAgIHJldHVybiBuZXcgRGVmYXVsdEJsb2NrUmVuZGVyZXIoKS5yZW5kZXJIaW50KHRoaXMpO1xuICB9XG4gIGxheW91dE5leHQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubmV4dCkge1xuICAgICAgdGhpcy5uZXh0LnBvc2l0aW9uLnggPSAwO1xuICAgICAgdGhpcy5uZXh0LnBvc2l0aW9uLnkgPSB0aGlzLmJCb3guaGVpZ2h0O1xuICAgICAgdGhpcy5uZXh0LnJlbmRlcih0aGlzLmdyb3VwKTtcbiAgICB9XG4gIH1cbiAgYXBwZW5kKGJsb2NrOiBCbG9ja1NWRyk6IEJsb2NrU1ZHIHtcbiAgICB0aGlzLm5leHQgPSBibG9jaztcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICByZW5kZXIocGFyZW50OiBTVkdHRWxlbWVudCB8IFNWR0VsZW1lbnQpOiB2b2lkIHtcbiAgICB2YXIgZW5naW5lID0gbmV3IERlZmF1bHRCbG9ja1JlbmRlcmVyKCk7XG4gICAgaWYgKHRoaXMuZ3JvdXAucGFyZW50Tm9kZSAhPT0gcGFyZW50KSB7XG4gICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQodGhpcy5ncm91cCk7XG4gICAgfVxuICAgIHZhciBoaW50ID0gZW5naW5lLnJlbmRlckhpbnQodGhpcyk7XG5cbiAgICB0aGlzLmJCb3ggPSBuZXcgUmVjdGFuZ2xlKHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCAxMjgsIGhpbnQudEhlaWdodCk7XG4gICAgLy9pZiAoIWVuZ2luZS5jb21wYXJlSGludHModGhpcy5yZW5kZXJIaW50LCBoaW50KSkge1xuICAgIHRoaXMuc2hhcGUuc2V0QXR0cmlidXRlKFwiZFwiLCBlbmdpbmUucGF0aChoaW50KSk7XG4gICAgdGhpcy5yZW5kZXJIaW50ID0gaGludDtcbiAgICAvL31cbiAgICB0aGlzLmdyb3VwLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIHRoaXMucG9zaXRpb24ueCArIFwiIFwiICsgdGhpcy5wb3NpdGlvbi55ICsgXCIpXCIpO1xuICAgIHRoaXMuc2hhcGUuc2V0QXR0cmlidXRlKFwiZmlsbFwiLCB0aGlzLmNvbG9yKTtcbiAgICB0aGlzLmxheW91dE5leHQoKTtcbiAgfVxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB2YXIgaHVlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzYwKTtcbiAgICB0aGlzLmdyb3VwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJnXCIpO1xuICAgIHRoaXMuZ3JvdXAuY2xhc3NMaXN0LmFkZChcImJsb2NrXCIpO1xuICAgIHRoaXMuc2hhcGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInBhdGhcIik7XG4gICAgLy90aGlzLnNoYXBlLnNldEF0dHJpYnV0ZShcImZpbGxcIiwgXCJoc2woXCIraHVlK1wiLCA3MCUsIDUwJSlcIik7XG4gICAgdGhpcy5zaGFwZS5zZXRBdHRyaWJ1dGUoXCJmaWx0ZXJcIiwgXCJ1cmwoI0JldmVsKVwiKTtcbiAgICB0aGlzLmdyb3VwLmFwcGVuZENoaWxkKHRoaXMuc2hhcGUpO1xuICAgIHZhciBtZSA9IHRoaXM7XG5cbiAgICB2YXIgZiA9IGZ1bmN0aW9uKGV2ZW50OiBhbnksIHVpPzogYW55KTogYW55IHtcbiAgICAgIC8vY29uc29sZS5sb2coXCJNRFwiLG1lKTtcbiAgICAgIHZhciBzdGFydE1Qb3MgPSBuZXcgVmVjdG9yKGV2ZW50LmNsaWVudFgsIGV2ZW50LmNsaWVudFkpO1xuICAgICAgdmFyIHN0YXJ0UG9zID0gbmV3IFZlY3RvcihtZS5wb3NpdGlvbi54ICsgMCwgbWUucG9zaXRpb24ueSArIDApO1xuICAgICAgdmFyIGYyID0gZnVuY3Rpb24oZXZlbnQ6IGFueSwgdWk/OiBhbnkpOiBhbnkge1xuICAgICAgICB2YXIgZW5kTVBvcyA9IG5ldyBWZWN0b3IoZXZlbnQuY2xpZW50WCwgZXZlbnQuY2xpZW50WSk7XG4gICAgICAgIG1lLnBvc2l0aW9uLnggPSBlbmRNUG9zLnggLSBzdGFydE1Qb3MueCArIHN0YXJ0UG9zLng7XG4gICAgICAgIG1lLnBvc2l0aW9uLnkgPSBlbmRNUG9zLnkgLSBzdGFydE1Qb3MueSArIHN0YXJ0UG9zLnk7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJNTVwiLG1lKTtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH07XG4gICAgICB2YXIgZjMgPSBmdW5jdGlvbihldmVudDogYW55LCB1aT86IGFueSk6IGFueSB7XG4gICAgICAgIHZhciBlbmRNUG9zID0gbmV3IFZlY3RvcihldmVudC5jbGllbnRYLCBldmVudC5jbGllbnRZKTtcbiAgICAgICAgbWUucG9zaXRpb24ueCA9IGVuZE1Qb3MueCAtIHN0YXJ0TVBvcy54ICsgc3RhcnRQb3MueDtcbiAgICAgICAgbWUucG9zaXRpb24ueSA9IGVuZE1Qb3MueSAtIHN0YXJ0TVBvcy55ICsgc3RhcnRQb3MueTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIGYyKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCBmMyk7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJNVVwiLG1lKTtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGYzKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZjIpO1xuXG5cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICB0aGlzLmdyb3VwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGYpO1xuXG4gIH1cbn1cbmV4cG9ydCB7IEJsb2NrU1ZHLCBCbG9ja1NoYXBlLCBTcXVhcmVCbG9ja1NoYXBlIH07XG4iLCJpbXBvcnQgeyBSZW5kZXJhYmxlIH0gZnJvbSBcIi4vcmVuZGVyYWJsZVwiO1xuaW1wb3J0IHsgUmVjdGFuZ2xlLCBWZWN0b3IgfSBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHsgU3F1YXJlQmxvY2tTaGFwZSB9IGZyb20gXCIuL2Jsb2NrU1ZHXCI7XG5cbmNsYXNzIElucHV0U1ZHIGltcGxlbWVudHMgUmVuZGVyYWJsZSB7XG4gIGdyb3VwOiBTVkdHRWxlbWVudDtcbiAgYkJveDogUmVjdGFuZ2xlO1xuICBzaGFwZTogU1ZHUGF0aEVsZW1lbnQ7XG4gIHBvc2l0aW9uOiBWZWN0b3IgPSBuZXcgVmVjdG9yKDAsIDApO1xuICBjb2xvcjogc3RyaW5nID0gXCJoc2woMCwgMTAwJSwgNTAlKVwiO1xuICB3aWR0aDogbnVtYmVyID0gNDg7XG4gIHR5cGU6IHN0cmluZyA9IFwiSW5wdXRTVkdcIjtcbiAgdG9Db2RlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwidW5kZWZpbmVkXCI7XG4gIH1cbiAgbGF5b3V0Q2hpbGRyZW4oKTogdm9pZCB7XG5cbiAgfVxuICBoZWlnaHQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5ncm91cC5nZXRCQm94KCkuaGVpZ2h0O1xuICB9XG4gIHJlbmRlcihwYXJlbnQ6IFNWR0dFbGVtZW50IHwgU1ZHRWxlbWVudCk6IHZvaWQge1xuICAgIHRoaXMubGF5b3V0Q2hpbGRyZW4oKTtcbiAgICBpZiAodGhpcy5ncm91cC5wYXJlbnROb2RlICE9PSBwYXJlbnQpIHtcbiAgICAgIHBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLmdyb3VwKTtcbiAgICB9XG5cbiAgICB0aGlzLmJCb3ggPSBuZXcgUmVjdGFuZ2xlKHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCB0aGlzLndpZHRoLCAyNCk7XG4gICAgdmFyIGJzaGFwZSA9IG5ldyBTcXVhcmVCbG9ja1NoYXBlKHsgaGVpZ2h0czogW3RoaXMuYkJveC5oZWlnaHQtMjBdLCB0SGVpZ2h0OiB0aGlzLmJCb3guaGVpZ2h0LCB3aWR0aHM6IFt0aGlzLmJCb3gud2lkdGhdLCBtV2lkdGg6IHRoaXMuYkJveC53aWR0aCwgZGF0YTogW3twcmV2OmZhbHNlLG5leHQ6ZmFsc2V9XSB9LDAsZmFsc2UsZmFsc2UpO1xuICAgIHRoaXMuc2hhcGUuc2V0QXR0cmlidXRlKFwiZFwiLCBic2hhcGUucGF0aCgpKTtcbiAgICB0aGlzLmdyb3VwLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIHRoaXMucG9zaXRpb24ueCArIFwiIFwiICsgdGhpcy5wb3NpdGlvbi55ICsgXCIpXCIpO1xuICAgIHRoaXMuc2hhcGUuc2V0QXR0cmlidXRlKFwiZmlsbFwiLCB0aGlzLmNvbG9yKTtcbiAgfVxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLndpZHRoID0gTWF0aC5yYW5kb20oKSAqIDQ4ICsgMjQ7XG4gICAgdmFyIGh1ZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDM2MCk7XG4gICAgdGhpcy5ncm91cCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwiZ1wiKTtcbiAgICB0aGlzLmdyb3VwLmNsYXNzTGlzdC5hZGQoXCJibG9ja1wiKTtcbiAgICB0aGlzLnNoYXBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJwYXRoXCIpO1xuICAgIC8vdGhpcy5zaGFwZS5zZXRBdHRyaWJ1dGUoXCJmaWxsXCIsIFwiaHNsKFwiK2h1ZStcIiwgNzAlLCA1MCUpXCIpO1xuICAgIHRoaXMuc2hhcGUuc2V0QXR0cmlidXRlKFwiZmlsdGVyXCIsIFwidXJsKCNCZXZlbDIpXCIpO1xuICAgIHRoaXMuZ3JvdXAuYXBwZW5kQ2hpbGQodGhpcy5zaGFwZSk7XG4gIH1cbn1cbmV4cG9ydCB7IElucHV0U1ZHIH07XG4iLCJpbXBvcnQgeyBSZW5kZXJhYmxlIH0gZnJvbSBcIi4vcmVuZGVyYWJsZVwiO1xuaW1wb3J0IHsgUmVjdGFuZ2xlLCBWZWN0b3IgfSBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHsgU3F1YXJlQmxvY2tTaGFwZSwgQmxvY2tTVkcgfSBmcm9tIFwiLi9ibG9ja1NWR1wiO1xuaW1wb3J0IHsgSW5wdXRTVkcgfSBmcm9tIFwiLi9pbnB1dFwiO1xuXG5jbGFzcyBJbnB1dFN0YWNrIGV4dGVuZHMgSW5wdXRTVkcge1xuICBncm91cDogU1ZHR0VsZW1lbnQ7XG4gIGJCb3g6IFJlY3RhbmdsZTtcbiAgc2hhcGU6IFNWR1BhdGhFbGVtZW50O1xuICBzdGFjazogQmxvY2tTVkc7XG4gIHBvc2l0aW9uOiBWZWN0b3IgPSBuZXcgVmVjdG9yKDAsIDApO1xuICBjb2xvcjogc3RyaW5nID0gXCJoc2woMCwgMTAwJSwgNTAlKVwiO1xuICB3aWR0aDogbnVtYmVyID0gNDg7XG4gIHR5cGU6IHN0cmluZyA9IFwiSW5wdXRTdGFja1wiO1xuICB0b0NvZGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJ1bmRlZmluZWRcIjtcbiAgfVxuICBoZWlnaHQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5iQm94LmhlaWdodDtcbiAgfVxuICBzZXRCbG9jayhzdGFjazogQmxvY2tTVkcpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5zdGFjaykge1xuICAgICAgdmFyIG9sZFN0YWNrID0gdGhpcy5zdGFjaztcbiAgICAgIGlmICh0aGlzLnN0YWNrLmdyb3VwLnBhcmVudE5vZGUgPT0gdGhpcy5ncm91cCkge1xuICAgICAgICB0aGlzLmdyb3VwLnJlbW92ZUNoaWxkKHRoaXMuc3RhY2suZ3JvdXApO1xuICAgICAgfVxuICAgICAgdGhpcy5zdGFjayA9IHN0YWNrO1xuICAgICAgaWYgKG9sZFN0YWNrLmdyb3VwLnBhcmVudE5vZGUgPT0gdGhpcy5ncm91cCkge1xuICAgICAgICB0aGlzLmdyb3VwLnJlbW92ZUNoaWxkKG9sZFN0YWNrLmdyb3VwKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zdGFjayA9IHN0YWNrO1xuICB9XG4gIHJlbmRlcihwYXJlbnQ6IFNWR0dFbGVtZW50IHwgU1ZHRWxlbWVudCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmdyb3VwLnBhcmVudE5vZGUgIT09IHBhcmVudCkge1xuICAgICAgcGFyZW50LmFwcGVuZENoaWxkKHRoaXMuZ3JvdXApO1xuICAgIH1cbiAgICBpZiAodGhpcy5zdGFjaykge1xuICAgICAgdGhpcy5zdGFjay5yZW5kZXIodGhpcy5ncm91cCk7XG4gICAgICB0aGlzLmJCb3ggPSBuZXcgUmVjdGFuZ2xlKHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCB0aGlzLnN0YWNrLmdyb3VwLmdldEJCb3goKS53aWR0aCxcbiAgICAgICAgdGhpcy5zdGFjay5ncm91cC5nZXRCQm94KCkuaGVpZ2h0IC0gKHRoaXMuc3RhY2subGFzdEJsb2NrKCkuY2FuSGF2ZU5leHQgPyA2IDogMCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmJCb3ggPSBuZXcgUmVjdGFuZ2xlKHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCAyNCwgMjQpO1xuXG4gICAgfVxuXG5cbiAgICB2YXIgYnNoYXBlID0gbmV3IFNxdWFyZUJsb2NrU2hhcGUoeyBoZWlnaHRzOiBbdGhpcy5iQm94LmhlaWdodCAtIDIwXSwgdEhlaWdodDogdGhpcy5iQm94LmhlaWdodCwgd2lkdGhzOiBbdGhpcy5iQm94LndpZHRoXSwgbVdpZHRoOiB0aGlzLmJCb3gud2lkdGgsIGRhdGE6IFt7IHByZXY6IGZhbHNlLCBuZXh0OiBmYWxzZSB9XSB9LCAwLCBmYWxzZSwgZmFsc2UpO1xuICAgIHRoaXMuc2hhcGUuc2V0QXR0cmlidXRlKFwiZFwiLCBic2hhcGUucGF0aCgpKTtcbiAgICB0aGlzLmdyb3VwLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIHRoaXMucG9zaXRpb24ueCArIFwiIFwiICsgdGhpcy5wb3NpdGlvbi55ICsgXCIpXCIpO1xuICAgIHRoaXMuZ3JvdXAuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzdGFjay1tYW5cIik7XG4gICAgdGhpcy5zaGFwZS5zZXRBdHRyaWJ1dGUoXCJmaWxsXCIsIFwidHJhbnNwYXJlbnRcIik7Ly90aGlzLmNvbG9yKTtcbiAgICBpZiAodGhpcy5zdGFjaykge1xuICAgICAgdGhpcy5zdGFjay5wb3NpdGlvbiA9IG5ldyBWZWN0b3IoMCwgMCk7XG4gICAgICB0aGlzLnN0YWNrLnJlbmRlcih0aGlzLmdyb3VwKTtcbiAgICB9XG4gIH1cbiAgY29uc3RydWN0b3Ioc3RhY2s/OiBCbG9ja1NWRykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zdGFjayA9IHN0YWNrO1xuICAgIC8vdGhpcy5zdGFjay5jYW5IYXZlTmV4dCA9IHRydWU7XG4gICAgLy90aGlzLnN0YWNrLmNhbkhhdmVQcmV2aW91cyA9IHRydWU7XG5cbiAgfVxufVxuZXhwb3J0IHsgSW5wdXRTdGFjayB9O1xuIiwiaW1wb3J0IHsgUmVuZGVyYWJsZSB9IGZyb20gXCIuL3JlbmRlcmFibGVcIjtcbmltcG9ydCB7IFJlY3RhbmdsZSwgVmVjdG9yIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmltcG9ydCB7IFNxdWFyZUJsb2NrU2hhcGUsIEJsb2NrU1ZHIH0gZnJvbSBcIi4vYmxvY2tTVkdcIjtcbmltcG9ydCB7IElucHV0U1ZHIH0gZnJvbSBcIi4vaW5wdXRcIjtcblxuY2xhc3MgSW5wdXRMYWJlbCBleHRlbmRzIElucHV0U1ZHIHtcbiAgZ3JvdXA6IFNWR0dFbGVtZW50O1xuICBiQm94OiBSZWN0YW5nbGU7XG4gIHNoYXBlOiBTVkdQYXRoRWxlbWVudDtcbiAgbGFiZWw6IFNWR1RleHRFbGVtZW50O1xuICB0ZXh0OiBzdHJpbmc7XG4gIHBvc2l0aW9uOiBWZWN0b3IgPSBuZXcgVmVjdG9yKDAsIDApO1xuICBjb2xvcjogc3RyaW5nID0gXCJoc2woMCwgMTAwJSwgNTAlKVwiO1xuICB3aWR0aDogbnVtYmVyID0gNDg7XG4gIHR5cGU6IHN0cmluZyA9IFwiSW5wdXRMYWJlbFwiO1xuICB0b0NvZGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJ1bmRlZmluZWRcIjtcbiAgfVxuICBoZWlnaHQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5iQm94LmhlaWdodDtcbiAgfVxuXG4gIHJlbmRlcihwYXJlbnQ6IFNWR0dFbGVtZW50IHwgU1ZHRWxlbWVudCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmdyb3VwLnBhcmVudE5vZGUgIT09IHBhcmVudCkge1xuICAgICAgcGFyZW50LmFwcGVuZENoaWxkKHRoaXMuZ3JvdXApO1xuICAgIH1cbiAgICBpZiAodGhpcy5sYWJlbC5wYXJlbnROb2RlICE9PSB0aGlzLmdyb3VwKSB7XG4gICAgICB0aGlzLmdyb3VwLmFwcGVuZENoaWxkKHRoaXMubGFiZWwpO1xuICAgIH1cblxuICAgIHRoaXMuYkJveCA9IG5ldyBSZWN0YW5nbGUodGhpcy5wb3NpdGlvbi54LCB0aGlzLnBvc2l0aW9uLnksIHRoaXMubGFiZWwuZ2V0QkJveCgpLndpZHRoLCB0aGlzLmxhYmVsLmdldEJCb3goKS5oZWlnaHQpO1xuXG5cblxuICAgIHZhciBic2hhcGUgPSBuZXcgU3F1YXJlQmxvY2tTaGFwZSh7IGhlaWdodHM6IFt0aGlzLmJCb3guaGVpZ2h0IC0gMjBdLCB0SGVpZ2h0OiB0aGlzLmJCb3guaGVpZ2h0LCB3aWR0aHM6IFt0aGlzLmJCb3gud2lkdGhdLCBtV2lkdGg6IHRoaXMuYkJveC53aWR0aCwgZGF0YTogW3sgcHJldjogZmFsc2UsIG5leHQ6IGZhbHNlIH1dIH0sIDAsIGZhbHNlLCBmYWxzZSk7XG4gICAgdGhpcy5zaGFwZS5zZXRBdHRyaWJ1dGUoXCJkXCIsIGJzaGFwZS5wYXRoKCkpO1xuICAgIHRoaXMuZ3JvdXAuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgdGhpcy5wb3NpdGlvbi54ICsgXCIgXCIgKyB0aGlzLnBvc2l0aW9uLnkgKyBcIilcIik7XG4gICAgdGhpcy5ncm91cC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInN0YWNrLW1hblwiKTtcbiAgICB0aGlzLmxhYmVsLmlubmVySFRNTCA9IHRoaXMudGV4dDtcbiAgICB0aGlzLnNoYXBlLnNldEF0dHJpYnV0ZShcImZpbGxcIiwgXCJ0cmFuc3BhcmVudFwiKTtcbiAgfVxuICBjb25zdHJ1Y3Rvcih0ZXh0Pzogc3RyaW5nKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnRleHQgPSB0ZXh0IHx8IFwiXCI7XG4gICAgdGhpcy5sYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidGV4dFwiKTtcbiAgICB0aGlzLmxhYmVsLnNldEF0dHJpYnV0ZShcImZpbGxcIiwgXCJ3aGl0ZVwiKTtcbiAgICB0aGlzLmxhYmVsLnNldEF0dHJpYnV0ZShcInlcIiwgXCIyXCIpO1xuICAgIHRoaXMubGFiZWwuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgXCJhbGlnbm1lbnQtYmFzZWxpbmU6IGhhbmdpbmc7Zm9udC1mYW1pbHk6bW9ub3NwYWNlO2ZvbnQtc2l6ZToxNnB4O3VzZXItc2VsZWN0Om5vbmU7XCIpO1xuXG5cbiAgfVxufVxuZXhwb3J0IHsgSW5wdXRMYWJlbCB9O1xuIiwiaW1wb3J0IHsgUmVuZGVyYWJsZSB9IGZyb20gXCIuL3JlbmRlcmFibGVcIjtcbmltcG9ydCB7IFJlY3RhbmdsZSwgVmVjdG9yIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmltcG9ydCB7IFNxdWFyZUJsb2NrU2hhcGUsIEJsb2NrU1ZHIH0gZnJvbSBcIi4vYmxvY2tTVkdcIjtcbmltcG9ydCB7IElucHV0U1ZHIH0gZnJvbSBcIi4vaW5wdXRcIjtcblxuY2xhc3MgSW5wdXRCbG9jayBleHRlbmRzIElucHV0U1ZHIHtcbiAgZ3JvdXA6IFNWR0dFbGVtZW50O1xuICBiQm94OiBSZWN0YW5nbGU7XG4gIHNoYXBlOiBTVkdQYXRoRWxlbWVudDtcbiAgc3RhY2s6IEJsb2NrU1ZHO1xuICB0eXBlOiBzdHJpbmcgPSBcIklucHV0QmxvY2tcIjtcbiAgcG9zaXRpb246IFZlY3RvciA9IG5ldyBWZWN0b3IoMCwgMCk7XG4gIGNvbG9yOiBzdHJpbmcgPSBcImhzbCgwLCAxMDAlLCA1MCUpXCI7XG4gIHdpZHRoOiBudW1iZXIgPSA0ODtcbiAgdG9Db2RlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwidW5kZWZpbmVkXCI7XG4gIH1cbiAgaGVpZ2h0KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuYkJveC5oZWlnaHQ7XG4gIH1cbiAgc2V0QmxvY2soc3RhY2s6IEJsb2NrU1ZHKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuc3RhY2spIHtcbiAgICAgIHZhciBvbGRTdGFjayA9IHRoaXMuc3RhY2s7XG4gICAgICBpZiAodGhpcy5zdGFjay5ncm91cC5wYXJlbnROb2RlID09IHRoaXMuZ3JvdXApIHtcbiAgICAgICAgdGhpcy5ncm91cC5yZW1vdmVDaGlsZCh0aGlzLnN0YWNrLmdyb3VwKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3RhY2sgPSBzdGFjaztcbiAgICAgIGlmIChvbGRTdGFjay5ncm91cC5wYXJlbnROb2RlID09IHRoaXMuZ3JvdXApIHtcbiAgICAgICAgdGhpcy5ncm91cC5yZW1vdmVDaGlsZChvbGRTdGFjay5ncm91cCk7XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuc3RhY2sgPSBzdGFjaztcbiAgfVxuICByZW5kZXIocGFyZW50OiBTVkdHRWxlbWVudCB8IFNWR0VsZW1lbnQpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5ncm91cC5wYXJlbnROb2RlICE9PSBwYXJlbnQpIHtcbiAgICAgIHBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLmdyb3VwKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuc3RhY2spIHtcbiAgICAgIHRoaXMuc3RhY2sucmVuZGVyKHRoaXMuZ3JvdXApO1xuICAgICAgdGhpcy5iQm94ID0gbmV3IFJlY3RhbmdsZSh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgdGhpcy5zdGFjay5ncm91cC5nZXRCQm94KCkud2lkdGgsXG4gICAgICAgIHRoaXMuc3RhY2suZ3JvdXAuZ2V0QkJveCgpLmhlaWdodCAtICh0aGlzLnN0YWNrLmxhc3RCbG9jaygpLmNhbkhhdmVOZXh0ID8gNiA6IDApKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5iQm94ID0gbmV3IFJlY3RhbmdsZSh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgMjQsIDI0KTtcblxuICAgIH1cblxuXG4gICAgdmFyIGJzaGFwZSA9IG5ldyBTcXVhcmVCbG9ja1NoYXBlKHsgaGVpZ2h0czogW3RoaXMuYkJveC5oZWlnaHQtMjBdLCB0SGVpZ2h0OiB0aGlzLmJCb3guaGVpZ2h0LCB3aWR0aHM6IFt0aGlzLmJCb3gud2lkdGhdLCBtV2lkdGg6IHRoaXMuYkJveC53aWR0aCwgZGF0YTogW3twcmV2OmZhbHNlLG5leHQ6ZmFsc2V9XSB9LDAsZmFsc2UsZmFsc2UpO1xuICAgIHRoaXMuc2hhcGUuc2V0QXR0cmlidXRlKFwiZFwiLCBic2hhcGUucGF0aCgpKTtcbiAgICB0aGlzLmdyb3VwLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIHRoaXMucG9zaXRpb24ueCArIFwiIFwiICsgdGhpcy5wb3NpdGlvbi55ICsgXCIpXCIpO1xuICAgIHRoaXMuZ3JvdXAuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzdGFjay1tYW5cIik7XG4gICAgdGhpcy5zaGFwZS5zZXRBdHRyaWJ1dGUoXCJmaWxsXCIsIHRoaXMuY29sb3IpO1xuICAgIGlmICh0aGlzLnN0YWNrKSB7XG4gICAgICB0aGlzLnN0YWNrLnBvc2l0aW9uID0gbmV3IFZlY3RvcigwLCAwKTtcbiAgICAgIHRoaXMuc3RhY2sucmVuZGVyKHRoaXMuZ3JvdXApO1xuICAgIH1cbiAgfVxuICBjb25zdHJ1Y3RvcihzdGFjaz86QmxvY2tTVkcsY29sb3I/OnN0cmluZykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zdGFjayA9IHN0YWNrO1xuICAgIGlmKGNvbG9yKXtcbiAgICAgIHRoaXMuY29sb3I9Y29sb3I7XG4gICAgfVxuICAgIC8vdGhpcy5zdGFjay5jYW5IYXZlTmV4dCA9IHRydWU7XG4gICAgLy90aGlzLnN0YWNrLmNhbkhhdmVQcmV2aW91cyA9IHRydWU7XG5cbiAgfVxufVxuZXhwb3J0IHsgSW5wdXRCbG9jayB9O1xuIiwiaW1wb3J0IHsgQ29kZUZsaXAgfSBmcm9tIFwiLi9jb2RlRmxpcFwiO1xuaW1wb3J0IHsgUmVjdGFuZ2xlIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmltcG9ydCB7IFJlbmRlcmFibGUgfSBmcm9tIFwiLi9yZW5kZXJhYmxlXCI7XG5cbmNsYXNzIFdvcmtzcGFjZSBpbXBsZW1lbnRzIFJlbmRlcmFibGUge1xuICByZW5kZXIocGFyZW50OiBTVkdHRWxlbWVudCB8IFNWR0VsZW1lbnQpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5ncm91cC5wYXJlbnROb2RlICE9PSBwYXJlbnQpIHtcbiAgICAgIHBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLmdyb3VwKTtcbiAgICB9XG4gICAgdGhpcy5iQm94ID0gbmV3IFJlY3RhbmdsZSh0aGlzLmVkaXRvci50b29sYm94LmJCb3gud2lkdGgsIDAsIHRoaXMuZWRpdG9yLmNvbnRhaW5lci5jbGllbnRXaWR0aCAtIHRoaXMuZWRpdG9yLnRvb2xib3guYkJveC53aWR0aCwgdGhpcy5lZGl0b3IuY29udGFpbmVyLmNsaWVudEhlaWdodCk7XG4gICAgdGhpcy5iYWNrZ3JvdW5kLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsIHRoaXMuYkJveC53aWR0aCArIFwicHhcIik7XG4gICAgdGhpcy5iYWNrZ3JvdW5kLnNldEF0dHJpYnV0ZShcImhlaWdodFwiLCB0aGlzLmJCb3guaGVpZ2h0ICsgXCJweFwiKTtcbiAgICB0aGlzLmdyb3VwLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIHRoaXMuYkJveC54ICsgXCIgXCIgKyB0aGlzLmJCb3gueSArIFwiKVwiKTtcbiAgfVxuICBncm91cDogU1ZHR0VsZW1lbnQ7XG4gIGJCb3g6IFJlY3RhbmdsZTtcbiAgZWRpdG9yOiBDb2RlRmxpcDtcbiAgYmFja2dyb3VuZDogU1ZHUmVjdEVsZW1lbnQ7XG4gIGNvbnN0cnVjdG9yKGVkaXRvcjogQ29kZUZsaXApIHtcbiAgICB0aGlzLmdyb3VwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJnXCIpO1xuICAgIHRoaXMuZWRpdG9yID0gZWRpdG9yO1xuICAgIHRoaXMuYmFja2dyb3VuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwicmVjdFwiKTtcbiAgICB0aGlzLmJhY2tncm91bmQuc2V0QXR0cmlidXRlKFwid2lkdGhcIiwgXCIyMDBweFwiKTtcbiAgICB0aGlzLmJhY2tncm91bmQuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIFwiMTBweFwiKTtcbiAgICB0aGlzLmJhY2tncm91bmQuc2V0QXR0cmlidXRlKFwiZmlsbFwiLCBcInJnYigyNTAsMjUwLDI1MClcIik7XG4gICAgdGhpcy5iYWNrZ3JvdW5kLmNsYXNzTGlzdC5hZGQoXCJ3b3Jrc3BhY2UtYmFja2dyb3VuZFwiKTtcbiAgICB0aGlzLmdyb3VwLmFwcGVuZENoaWxkKHRoaXMuYmFja2dyb3VuZCk7XG4gICAgdGhpcy5iQm94ID0gbmV3IFJlY3RhbmdsZSg1MDAsIDAsIDUwMCwgNTAwKTtcbiAgfVxufVxuZXhwb3J0IHsgV29ya3NwYWNlIH07XG4iLCJpbXBvcnQgeyBUb29sYm94IH0gZnJvbSBcIi4vdG9vbGJveFwiO1xuaW1wb3J0IHsgV29ya3NwYWNlIH0gZnJvbSBcIi4vd29ya3NwYWNlXCI7XG5cbmNsYXNzIENvZGVGbGlwIHtcbiAgcmVuZGVyKCk6IHZvaWQge1xuICAgIHRoaXMuc3ZnLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsIHRoaXMuY29udGFpbmVyLmNsaWVudFdpZHRoICsgXCJcIik7XG4gICAgdGhpcy5zdmcuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIHRoaXMuY29udGFpbmVyLmNsaWVudEhlaWdodCArIFwiXCIpO1xuICAgIHRoaXMudG9vbGJveC5yZW5kZXIodGhpcy5zdmcpO1xuICAgIHRoaXMud29ya3NwYWNlLnJlbmRlcih0aGlzLnN2Zyk7XG4gIH1cblxuICBjb250YWluZXI6IEhUTUxEaXZFbGVtZW50O1xuICBzdmc6IFNWR0VsZW1lbnQ7XG4gIHRvb2xib3g6IFRvb2xib3g7XG4gIHdvcmtzcGFjZTogV29ya3NwYWNlO1xuICBjb25zdHJ1Y3Rvcihjb250YWluZXI6IEhUTUxEaXZFbGVtZW50KSB7XG4gICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgdGhpcy5zdmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInN2Z1wiKTtcbiAgICB0aGlzLnN2Zy5pbm5lckhUTUwgPSBgXG4gICAgPGZpbHRlciBpZD1cIkJldmVsXCIgZmlsdGVyVW5pdHM9XCJvYmplY3RCb3VuZGluZ0JveFwiIHg9XCItMTAlXCIgeT1cIi0xMCVcIiB3aWR0aD1cIjE1MCVcIiBoZWlnaHQ9XCIxNTAlXCI+XG4gIFx0XHQ8ZmVHYXVzc2lhbkJsdXIgaW49XCJTb3VyY2VBbHBoYVwiIHN0ZERldmlhdGlvbj1cIjFcIiByZXN1bHQ9XCJibHVyXCIvPlxuICBcdFx0PGZlU3BlY3VsYXJMaWdodGluZyBpbj1cImJsdXJcIiBzdXJmYWNlU2NhbGU9XCIzXCIgc3BlY3VsYXJDb25zdGFudD1cIjAuNVwiIHNwZWN1bGFyRXhwb25lbnQ9XCI1XCIgcmVzdWx0PVwic3BlY091dFwiIGxpZ2h0aW5nLWNvbG9yPVwid2hpdGVcIj5cbiAgXHRcdFx0PGZlUG9pbnRMaWdodCB4PVwiLTUwMDBcIiB5PVwiLTUwMDBcIiB6PVwiODAwMFwiLz5cbiAgXHRcdDwvZmVTcGVjdWxhckxpZ2h0aW5nPlxuICBcdFx0PGZlQ29tcG9zaXRlIGluPVwic3BlY091dFwiIGluMj1cIlNvdXJjZUFscGhhXCIgb3BlcmF0b3I9XCJpblwiIHJlc3VsdD1cInNwZWNPdXQyXCIvPlxuICAgICAgPGZlQ29tcG9zaXRlIGluPVwiU291cmNlR3JhcGhpY1wiIGluMj1cInNwZWNPdXQyXCIgb3BlcmF0b3I9XCJhcml0aG1ldGljXCIgazE9XCIwXCIgazI9XCIwXCIgazM9XCIxXCIgazQ9XCItMC4zXCIgcmVzdWx0PVwibGl0UGFpbnQwXCIgLz5cbiAgXHRcdDxmZUNvbXBvc2l0ZSBpbj1cIlNvdXJjZUdyYXBoaWNcIiBpbjI9XCJsaXRQYWludDBcIiBvcGVyYXRvcj1cImFyaXRobWV0aWNcIiBrMT1cIjBcIiBrMj1cIjFcIiBrMz1cIjFcIiBrND1cIjBcIiByZXN1bHQ9XCJsaXRQYWludFwiIC8+XG4gIFx0PC9maWx0ZXI+XG4gICAgPGZpbHRlciBpZD1cIkJldmVsMlwiIGZpbHRlclVuaXRzPVwib2JqZWN0Qm91bmRpbmdCb3hcIiB4PVwiLTEwJVwiIHk9XCItMTAlXCIgd2lkdGg9XCIxNTAlXCIgaGVpZ2h0PVwiMTUwJVwiPlxuICBcdFx0PGZlR2F1c3NpYW5CbHVyIGluPVwiU291cmNlQWxwaGFcIiBzdGREZXZpYXRpb249XCIxXCIgcmVzdWx0PVwiYmx1clwiLz5cbiAgXHRcdDxmZVNwZWN1bGFyTGlnaHRpbmcgaW49XCJibHVyXCIgc3VyZmFjZVNjYWxlPVwiM1wiIHNwZWN1bGFyQ29uc3RhbnQ9XCIwLjVcIiBzcGVjdWxhckV4cG9uZW50PVwiNVwiIHJlc3VsdD1cInNwZWNPdXRcIiBsaWdodGluZy1jb2xvcj1cIndoaXRlXCI+XG4gIFx0XHRcdDxmZVBvaW50TGlnaHQgeD1cIjUwMDBcIiB5PVwiNTAwMFwiIHo9XCI4MDAwXCIvPlxuICBcdFx0PC9mZVNwZWN1bGFyTGlnaHRpbmc+XG4gIFx0XHQ8ZmVDb21wb3NpdGUgaW49XCJzcGVjT3V0XCIgaW4yPVwiU291cmNlQWxwaGFcIiBvcGVyYXRvcj1cImluXCIgcmVzdWx0PVwic3BlY091dDJcIi8+XG4gICAgICA8ZmVDb21wb3NpdGUgaW49XCJTb3VyY2VHcmFwaGljXCIgaW4yPVwic3BlY091dDJcIiBvcGVyYXRvcj1cImFyaXRobWV0aWNcIiBrMT1cIjBcIiBrMj1cIjBcIiBrMz1cIjFcIiBrND1cIi0wLjNcIiByZXN1bHQ9XCJsaXRQYWludDBcIiAvPlxuICBcdFx0PGZlQ29tcG9zaXRlIGluPVwiU291cmNlR3JhcGhpY1wiIGluMj1cImxpdFBhaW50MFwiIG9wZXJhdG9yPVwiYXJpdGhtZXRpY1wiIGsxPVwiMFwiIGsyPVwiMVwiIGszPVwiMVwiIGs0PVwiMFwiIHJlc3VsdD1cImxpdFBhaW50XCIgLz5cbiAgXHQ8L2ZpbHRlcj5cbiAgICA8ZGVmcz48cGF0dGVybiBpZD1cIlN0cmlwZXNcIiBwYXR0ZXJuVW5pdHM9XCJ1c2VyU3BhY2VPblVzZVwiIHdpZHRoPVwiNTBcIiBoZWlnaHQ9XCI1MFwiIHBhdHRlcm5UcmFuc2Zvcm09XCJyb3RhdGUoNDUpXCI+XG4gICAgPHJlY3QgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiNTBcIiBoZWlnaHQ9XCI1MFwiIGZpbGw9XCIjNDQ0NDQ0XCI+PC9yZWN0PlxuICAgIDxsaW5lIHgxPVwiMjVcIiB5PVwiMFwiIHgyPVwiMjVcIiB5Mj1cIjUwXCIgc3Ryb2tlPVwiIzQ0NDQ0NFwiIHN0cm9rZS13aWR0aD1cIjI1XCIgLz5cbiAgICA8L3BhdHRlcm4+PC9kZWZzPlxuICAgIGA7XG4gICAgdGhpcy5jb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5zdmcpO1xuICAgIHRoaXMuc3ZnLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsIHRoaXMuY29udGFpbmVyLmNsaWVudFdpZHRoICsgXCJcIik7XG4gICAgdGhpcy5zdmcuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIHRoaXMuY29udGFpbmVyLmNsaWVudEhlaWdodCArIFwiXCIpO1xuICAgIHRoaXMudG9vbGJveCA9IG5ldyBUb29sYm94KHRoaXMpO1xuICAgIHRoaXMud29ya3NwYWNlID0gbmV3IFdvcmtzcGFjZSh0aGlzKTtcbiAgICB2YXIgbWUgPSB0aGlzO1xuICAgIHdpbmRvdy5zZXRJbnRlcnZhbChmdW5jdGlvbigpIHsgbWUucmVuZGVyKCkgfSwgMTAwKTtcbiAgfVxufVxuZXhwb3J0IHsgQ29kZUZsaXAgfTtcbiIsImltcG9ydCB7IExhbmd1YWdlIH0gZnJvbSBcIi4uL2xhbmd1YWdlXCI7XG5pbXBvcnQgeyBCbG9ja1NWRyB9IGZyb20gXCIuLi9ibG9ja1NWR1wiO1xuaW1wb3J0IHsgSW5wdXRMYWJlbCB9IGZyb20gXCIuLi9sYWJlbElucHV0XCI7XG5pbXBvcnQgeyBJbnB1dFN0YWNrIH0gZnJvbSBcIi4uL3N0YWNrSW5wdXRcIjtcbmltcG9ydCB7IElucHV0QmxvY2sgfSBmcm9tIFwiLi4vYmxvY2tJbnB1dFwiO1xuXG5jbGFzcyBMYW5ndWFnZVB5dGhvbiBpbXBsZW1lbnRzIExhbmd1YWdlIHtcbiAgYmxvY2tJZih0ZXN0PzogQmxvY2tTVkcsIGNvbnNlcXVlbnQ/OiBCbG9ja1NWRyk6IEJsb2NrU1ZHIHtcbiAgICB2YXIgYiA9IG5ldyBCbG9ja1NWRygpO1xuICAgIGIuY29sb3IgPSBcImhzbCgxODAsIDEwMCUsIDQwJSlcIjtcbiAgICBiLmNhbkhhdmVOZXh0ID0gdHJ1ZTtcbiAgICBiLmNhbkhhdmVQcmV2aW91cyA9IHRydWU7XG4gICAgYi5pbnB1dExpc3QgPSBbW25ldyBJbnB1dExhYmVsKFwiaWYgKFwiKSwgbmV3IElucHV0QmxvY2sodGVzdCwgYi5jb2xvciksIG5ldyBJbnB1dExhYmVsKFwiKTpcIildLFxuICAgIFtuZXcgSW5wdXRTdGFjayhjb25zZXF1ZW50KV1dO1xuICAgIHJldHVybiBiO1xuICB9XG4gIGJsb2NrSWZFbHNlKCk6IEJsb2NrU1ZHIHtcbiAgICB2YXIgYiA9IG5ldyBCbG9ja1NWRygpO1xuICAgIGIuY29sb3IgPSBcImhzbCgxODAsIDEwMCUsIDQwJSlcIjtcbiAgICBiLmNhbkhhdmVOZXh0ID0gdHJ1ZTtcbiAgICBiLmNhbkhhdmVQcmV2aW91cyA9IHRydWU7XG4gICAgYi5pbnB1dExpc3QgPSBbXG4gICAgICBbbmV3IElucHV0TGFiZWwoXCJpZiAoXCIpLCBuZXcgSW5wdXRCbG9jayh0aGlzLmJsb2NrRmFsc2UoKSwgYi5jb2xvciksIG5ldyBJbnB1dExhYmVsKFwiKTpcIildLFxuICAgICAgW25ldyBJbnB1dFN0YWNrKCldLFxuICAgICAgW25ldyBJbnB1dExhYmVsKFwiZWxzZTpcIildLFxuICAgICAgW25ldyBJbnB1dFN0YWNrKCldXG4gICAgXTtcbiAgICByZXR1cm4gYjtcbiAgfVxuICBibG9ja0ZhbHNlKCk6IEJsb2NrU1ZHIHtcbiAgICB2YXIgYiA9IG5ldyBCbG9ja1NWRygpO1xuICAgIGIuY29sb3IgPSBcImhzbCgxMjAsIDEwMCUsIDQwJSlcIjtcbiAgICBiLmNhbkhhdmVOZXh0ID0gZmFsc2U7XG4gICAgYi5jYW5IYXZlUHJldmlvdXMgPSBmYWxzZTtcbiAgICBiLmlucHV0TGlzdCA9IFtbbmV3IElucHV0TGFiZWwoXCJGYWxzZVwiKV1dO1xuICAgIHJldHVybiBiO1xuICB9XG4gIGJsb2NrVHJ1ZSgpOiBCbG9ja1NWRyB7XG4gICAgdmFyIGIgPSBuZXcgQmxvY2tTVkcoKTtcbiAgICBiLmNvbG9yID0gXCJoc2woMTIwLCAxMDAlLCA0MCUpXCI7XG4gICAgYi5jYW5IYXZlTmV4dCA9IGZhbHNlO1xuICAgIGIuY2FuSGF2ZVByZXZpb3VzID0gZmFsc2U7XG4gICAgYi5pbnB1dExpc3QgPSBbW25ldyBJbnB1dExhYmVsKFwiVHJ1ZVwiKV1dO1xuICAgIHJldHVybiBiO1xuICB9XG4gIGJsb2NrUHJpbnQoeD86IEJsb2NrU1ZHKTogQmxvY2tTVkcge1xuICAgIHZhciBiID0gbmV3IEJsb2NrU1ZHKCk7XG4gICAgYi5jb2xvciA9IFwiaHNsKDYwLCAxMDAlLCA0MCUpXCI7XG4gICAgYi5jYW5IYXZlTmV4dCA9IHRydWU7XG4gICAgYi5jYW5IYXZlUHJldmlvdXMgPSB0cnVlO1xuICAgIGIuaW5wdXRMaXN0ID0gW1tuZXcgSW5wdXRMYWJlbChcInByaW50IChcIiksIG5ldyBJbnB1dEJsb2NrKHgsIGIuY29sb3IpLCBuZXcgSW5wdXRMYWJlbChcIilcIildXTtcbiAgICByZXR1cm4gYjtcbiAgfVxuICBibG9ja01hdGhBZGQoeD86IEJsb2NrU1ZHLCB5PzogQmxvY2tTVkcpOiBCbG9ja1NWRyB7XG4gICAgdmFyIGIgPSBuZXcgQmxvY2tTVkcoKTtcbiAgICBiLmNvbG9yID0gXCJoc2woMjEwLCAxMDAlLCA0MCUpXCI7XG4gICAgYi5jYW5IYXZlTmV4dCA9IGZhbHNlO1xuICAgIGIuY2FuSGF2ZVByZXZpb3VzID0gZmFsc2U7XG4gICAgYi5pbnB1dExpc3QgPSBbW25ldyBJbnB1dExhYmVsKFwiKFwiKSwgbmV3IElucHV0QmxvY2soeCwgYi5jb2xvciksIG5ldyBJbnB1dExhYmVsKFwiK1wiKSwgbmV3IElucHV0QmxvY2soeSwgYi5jb2xvciksIG5ldyBJbnB1dExhYmVsKFwiKVwiKV1dO1xuICAgIHJldHVybiBiO1xuICB9XG4gIGJsb2NrTWF0aE11bHRpcGx5KHg/OiBCbG9ja1NWRywgeT86IEJsb2NrU1ZHKTogQmxvY2tTVkcge1xuICAgIHZhciBiID0gbmV3IEJsb2NrU1ZHKCk7XG4gICAgYi5jb2xvciA9IFwiaHNsKDIxMCwgMTAwJSwgNDAlKVwiO1xuICAgIGIuY2FuSGF2ZU5leHQgPSBmYWxzZTtcbiAgICBiLmNhbkhhdmVQcmV2aW91cyA9IGZhbHNlO1xuICAgIGIuaW5wdXRMaXN0ID0gW1tuZXcgSW5wdXRMYWJlbChcIihcIiksIG5ldyBJbnB1dEJsb2NrKHgsIGIuY29sb3IpLCBuZXcgSW5wdXRMYWJlbChcIipcIiksIG5ldyBJbnB1dEJsb2NrKHksIGIuY29sb3IpLCBuZXcgSW5wdXRMYWJlbChcIilcIildXTtcbiAgICByZXR1cm4gYjtcbiAgfVxuICBibG9ja01hdGhEaXZpZGUoeD86IEJsb2NrU1ZHLCB5PzogQmxvY2tTVkcpOiBCbG9ja1NWRyB7XG4gICAgdmFyIGIgPSBuZXcgQmxvY2tTVkcoKTtcbiAgICBiLmNvbG9yID0gXCJoc2woMjEwLCAxMDAlLCA0MCUpXCI7XG4gICAgYi5jYW5IYXZlTmV4dCA9IGZhbHNlO1xuICAgIGIuY2FuSGF2ZVByZXZpb3VzID0gZmFsc2U7XG4gICAgYi5pbnB1dExpc3QgPSBbW25ldyBJbnB1dExhYmVsKFwiKFwiKSwgbmV3IElucHV0QmxvY2soeCwgYi5jb2xvciksIG5ldyBJbnB1dExhYmVsKFwiL1wiKSwgbmV3IElucHV0QmxvY2soeSwgYi5jb2xvciksIG5ldyBJbnB1dExhYmVsKFwiKVwiKV1dO1xuICAgIHJldHVybiBiO1xuICB9XG4gIGJsb2NrTWF0aFN1YnRyYWN0KHg/OiBCbG9ja1NWRywgeT86IEJsb2NrU1ZHKTogQmxvY2tTVkcge1xuICAgIHZhciBiID0gbmV3IEJsb2NrU1ZHKCk7XG4gICAgYi5jb2xvciA9IFwiaHNsKDIxMCwgMTAwJSwgNDAlKVwiO1xuICAgIGIuY2FuSGF2ZU5leHQgPSBmYWxzZTtcbiAgICBiLmNhbkhhdmVQcmV2aW91cyA9IGZhbHNlO1xuICAgIGIuaW5wdXRMaXN0ID0gW1tuZXcgSW5wdXRMYWJlbChcIihcIiksIG5ldyBJbnB1dEJsb2NrKHgsIGIuY29sb3IpLCBuZXcgSW5wdXRMYWJlbChcIi1cIiksIG5ldyBJbnB1dEJsb2NrKHksIGIuY29sb3IpLCBuZXcgSW5wdXRMYWJlbChcIilcIildXTtcbiAgICByZXR1cm4gYjtcbiAgfVxuICBnZXRCbG9ja3MoKTogQmxvY2tTVkdbXSB7XG4gICAgdmFyIGJsb2NrczogQmxvY2tTVkdbXSA9IFtdO1xuICAgIGJsb2Nrcy5wdXNoKHRoaXMuYmxvY2tJZigpKTtcbiAgICBibG9ja3MucHVzaCh0aGlzLmJsb2NrSWZFbHNlKCkpO1xuICAgIGJsb2Nrcy5wdXNoKHRoaXMuYmxvY2tGYWxzZSgpKTtcbiAgICBibG9ja3MucHVzaCh0aGlzLmJsb2NrVHJ1ZSgpKTtcbiAgICBibG9ja3MucHVzaCh0aGlzLmJsb2NrUHJpbnQoKSk7XG4gICAgYmxvY2tzLnB1c2godGhpcy5ibG9ja01hdGhBZGQoKSk7XG4gICAgYmxvY2tzLnB1c2godGhpcy5ibG9ja01hdGhNdWx0aXBseSgpKTtcbiAgICBibG9ja3MucHVzaCh0aGlzLmJsb2NrTWF0aERpdmlkZSgpKTtcbiAgICBibG9ja3MucHVzaCh0aGlzLmJsb2NrTWF0aFN1YnRyYWN0KCkpO1xuICAgIC8vYmxvY2tzLnB1c2godGhpcy5ibG9ja0lmKHRoaXMuYmxvY2tUcnVlKCksIHRoaXMuYmxvY2tQcmludCh0aGlzLmJsb2NrRmFsc2UoKSkpKTtcbiAgICBibG9ja3MucHVzaCh0aGlzLmJsb2NrSWYodGhpcy5ibG9ja1RydWUoKSwgdGhpcy5ibG9ja1ByaW50KHRoaXMuYmxvY2tGYWxzZSgpKS5hcHBlbmQodGhpcy5ibG9ja1ByaW50KHRoaXMuYmxvY2tUcnVlKCkpKSkpO1xuICAgIHJldHVybiBibG9ja3M7XG4gIH1cbiAgY29kZVRvQmxvY2soc3RyOiBzdHJpbmcpOiBCbG9ja1NWRyB7XG4gICAgcmV0dXJuIHRoaXMuYmxvY2tGYWxzZSgpO1xuICB9XG59XG5leHBvcnQgeyBMYW5ndWFnZVB5dGhvbiB9O1xuIiwiaW1wb3J0IHtDb2RlRmxpcH0gZnJvbSBcIi4vY29kZUZsaXBcIjtcbmltcG9ydCB7IExhbmd1YWdlIH0gZnJvbSBcIi4vbGFuZ3VhZ2VcIjtcbmltcG9ydCB7IExhbmd1YWdlUHl0aG9uIH0gZnJvbSBcIi4vcHl0aG9uL0xhbmd1YWdlUHl0aG9uXCI7XG52YXIgZWRpdG9yRWxlbWVudDpIVE1MRGl2RWxlbWVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlZGl0b3JFbGVtZW50KTtcbig8YW55PndpbmRvdykuZWRpdG9yRWxlbWVudD1lZGl0b3JFbGVtZW50O1xudmFyIGVkaXRvcjpDb2RlRmxpcD1uZXcgQ29kZUZsaXAoZWRpdG9yRWxlbWVudCk7XG52YXIgbGFuZzpMYW5ndWFnZT1uZXcgTGFuZ3VhZ2VQeXRob24oKTtcbmVkaXRvci50b29sYm94LmFkZEJsb2Nrc0Zvckxhbmd1YWdlKGxhbmcpO1xuKDxhbnk+d2luZG93KS5lZGl0b3I9ZWRpdG9yO1xuZWRpdG9yLnJlbmRlcigpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==